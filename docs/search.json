[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to R",
    "section": "",
    "text": "Introduction to R\n\nMarine Ecosystem Dynamics\n\n02-03 September 2023, Askö, Sweden."
  },
  {
    "objectID": "program.html",
    "href": "program.html",
    "title": "Material",
    "section": "",
    "text": "Material\n\n\n\n\n\n02-Sep-2023 (Saturday)\nIntroduction to R\nSlides\nTutorial\n\n\n03-Sep-2023 (Sunday)\nData manipulation and visualisation\nSlides\nTutorial"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "During this introduction course, we will learn the basics of R and how to manipulate data.\nThroughout this introduction, we will learn how to use  in .\nThis introduction covers:\n\n\n\nR syntax\nData import using readr\nPipe the data using magrittr\nTidy the data using tidyr\nArrange the data using dplyr\nVisualise the data using ggplot2\n\nThe data we will use are all available in the package PlanktonData\n\n\n\n\n\nInstall R and R studio before the start of the course !"
  },
  {
    "objectID": "slides/Part1/index.html#plan-for-todays-lecture",
    "href": "slides/Part1/index.html#plan-for-todays-lecture",
    "title": "Introduction to R",
    "section": "Plan for today’s lecture",
    "text": "Plan for today’s lecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe R syntax\nThe R studio software\nVariables, functions and vectors\nImporting data using the readr package"
  },
  {
    "objectID": "slides/Part1/index.html#why-using-r",
    "href": "slides/Part1/index.html#why-using-r",
    "title": "Introduction to R",
    "section": "Why using R?",
    "text": "Why using R?\n\n\nPro\n\nFree\nOpen source\nReproducible science\n\n\n# You can keep track of all the data analysis steps\n2 + 2 + 3       # step 1\n#&gt; [1] 7\nlog(2 + 2 + 3)  # step 2\n#&gt; [1] 1.94591\n\n\nCons\n\nScary\nSyntax\n\n\n# This can be scary\nlibrary(ggplot2) ; library(dplyr) ; set.seed(123)\ntibble(Month = sample(month.abb, 100, replace = TRUE),\n       Genus = sample(c(\"Acartia\", \"Temora\", \"Centropages\", \"Pseudocalanus\"), 100, replace = T),\n       Abundance = rnorm(100,12,7)) |&gt; \n  group_by(Month, Genus) |&gt; \n  summarise(Avg_abundance = mean(Abundance, na.rm = T)) |&gt; \n \n  ggplot(aes(x = Genus, y = Avg_abundance)) +\n    geom_boxplot()"
  },
  {
    "objectID": "slides/Part1/index.html#r-is-open-and-free",
    "href": "slides/Part1/index.html#r-is-open-and-free",
    "title": "Introduction to R",
    "section": "R is open and free",
    "text": "R is open and free\nThis means that people have worked on it and created tools and functions that everyone can use !\n\n\nR base functions (already implemented and loaded when starting a new session): e.g., plot(), +, -, sin()\nAdditional functions (we need to load): e.g. ggplot(), select(), …"
  },
  {
    "objectID": "slides/Part1/index.html#how-to-install-and-load-packages",
    "href": "slides/Part1/index.html#how-to-install-and-load-packages",
    "title": "Introduction to R",
    "section": "How to install and load packages",
    "text": "How to install and load packages\n\nA package need to be installed only once\nTo use functions within a package call it using library()\n\n\ninstall.packages(\"PackageName\")\nlibrary(PackageName)"
  },
  {
    "objectID": "slides/Part1/index.html#r-syntax",
    "href": "slides/Part1/index.html#r-syntax",
    "title": "Introduction to R",
    "section": "R syntax",
    "text": "R syntax\n\n\nR as a calculator\n\nR can resolve “basic” operation\n\n\n2 + 2\n#&gt; [1] 4\n3 * 4\n#&gt; [1] 12\n(5 + 2) * (4 - 1)\n#&gt; [1] 21\n\n\nAnd more complex operation\n\n\nsin(60)\n#&gt; [1] -0.3048106\nlog(10)\n#&gt; [1] 2.302585"
  },
  {
    "objectID": "slides/Part1/index.html#variables",
    "href": "slides/Part1/index.html#variables",
    "title": "Introduction to R",
    "section": "Variables",
    "text": "Variables\nVariables in R can be of several types :\n\nLogical: TRUE or FALSE\nNumeric: 3.1 or 4\nCharacter: Example\n\n\nvariable_1 &lt;- 4.3\nvariable_2 &lt;- c(1, 2, 3)\nvariable_3 &lt;- \"text\""
  },
  {
    "objectID": "slides/Part1/index.html#functions",
    "href": "slides/Part1/index.html#functions",
    "title": "Introduction to R",
    "section": "Functions",
    "text": "Functions\n\nAll functions have the same structure but the number of argument may change function_name(argument1, ...)\n\n\nlog(10)\nplot(x, y)\n\n\nTo know what arguments are needed, we can always refer to the manuals using ? before the function\n\n\n?plot()"
  },
  {
    "objectID": "slides/Part1/index.html#if-you-want-to-go-a-step-further",
    "href": "slides/Part1/index.html#if-you-want-to-go-a-step-further",
    "title": "Introduction to R",
    "section": "If you want to go a step further",
    "text": "If you want to go a step further\n\nYou can define your own functions:\n\n\nmy_addition &lt;- function(parameter_1, parameter_2, ...){\n  parameter_1 + parameter_2\n}\n\n\n\nAnd compare if this is equal to the base R functions:\n\n\nmy_addition(parameter_1 = 1, parameter_2 = 2) == 1 + 2\n#&gt; [1] TRUE\n\n\nNote the logical operations are written as follow:\n\nis equal: ==\nis different: !="
  },
  {
    "objectID": "slides/Part1/index.html#vectors",
    "href": "slides/Part1/index.html#vectors",
    "title": "Introduction to R",
    "section": "Vectors",
    "text": "Vectors\n\nVectors can be created using different functions\n\n\n(vector_1 &lt;- c(1, 3, 6))\n#&gt; [1] 1 3 6\n(vector_2 &lt;- seq(from = 2, to = 10, by = 3))\n#&gt; [1] 2 5 8\n(vector_3 &lt;- rep(\"Yellow\", 3))\n#&gt; [1] \"Yellow\" \"Yellow\" \"Yellow\"\n(vector_4 &lt;- c(vector_1, vector_2))\n#&gt; [1] 1 3 6 2 5 8\n\n\n\nR works with vectors from which we can do our calculation\n\n\nvector_1 * 2\n#&gt; [1]  2  6 12\nmean(vector_4)\n#&gt; [1] 4.166667\nclass(vector_3)\n#&gt; [1] \"character\""
  },
  {
    "objectID": "slides/Part1/index.html#importing-data",
    "href": "slides/Part1/index.html#importing-data",
    "title": "Introduction to R",
    "section": "Importing data",
    "text": "Importing data\n\nThe best and most efficient way to import data is to use the readr packages\n\n\n\nThe main function has this form: read_* where * can be:\n\ncsv - comma-separated values\ntsv - tab-separated values\ncsv2 - semicolon-separated values with , as the decimal mark\ndelim - delimited files"
  },
  {
    "objectID": "slides/Part1/index.html#example",
    "href": "slides/Part1/index.html#example",
    "title": "Introduction to R",
    "section": "Example",
    "text": "Example\n\nlibrary(readr)\n\nExample_1 &lt;- readr::read_csv(\"./../../assets/data/Example_1.csv\") \nhead(Example_1)\n#&gt; # A tibble: 6 × 3\n#&gt;   Month Genus         Abundance\n#&gt;   &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;\n#&gt; 1 Dec   Centropages      -0.552\n#&gt; 2 Apr   Centropages      12.5  \n#&gt; 3 Feb   Centropages      18.4  \n#&gt; 4 Sep   Acartia          25.6  \n#&gt; 5 Mar   Pseudocalanus     9.70 \n#&gt; 6 Jul   Temora            8.90\n\n\n\ntail(Example_1)\n#&gt; # A tibble: 6 × 3\n#&gt;   Month Genus         Abundance\n#&gt;   &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;\n#&gt; 1 Jan   Pseudocalanus     22.7 \n#&gt; 2 Feb   Acartia           27.6 \n#&gt; 3 Aug   Acartia            7.75\n#&gt; 4 Jan   Centropages       17.0 \n#&gt; 5 Feb   Centropages        5.95\n#&gt; 6 Aug   Temora            17.2"
  },
  {
    "objectID": "slides/Part1/index.html#plan-for-tomorrow",
    "href": "slides/Part1/index.html#plan-for-tomorrow",
    "title": "Introduction to R",
    "section": "Plan for tomorrow",
    "text": "Plan for tomorrow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to tidyverse\nPipe the data using magrittr\nClean the data using tidyr\nArrange the data using dplyr\nPlot using ggplot2"
  },
  {
    "objectID": "slides/Part1/index.html#do-not-hesitate-to-use-google-to-get-help",
    "href": "slides/Part1/index.html#do-not-hesitate-to-use-google-to-get-help",
    "title": "Introduction to R",
    "section": "Do not hesitate to use google to get help !",
    "text": "Do not hesitate to use google to get help !\nIf you have an issue with something, you are probably not the first and someone asked a solution on a forum !"
  },
  {
    "objectID": "slides/Part2/index.html#plan-for-todays-lecture",
    "href": "slides/Part2/index.html#plan-for-todays-lecture",
    "title": "Data manipulation and visualisation",
    "section": "Plan for today’s lecture",
    "text": "Plan for today’s lecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to tidyverse\nPipe the data using magrittr\nClean the data using tidyr\nArrange the data using dplyr\nPlot using ggplot2"
  },
  {
    "objectID": "slides/Part2/index.html#tidyverse",
    "href": "slides/Part2/index.html#tidyverse",
    "title": "Data manipulation and visualisation",
    "section": "Tidyverse",
    "text": "Tidyverse\n\n\n\n\n\ntidyverse is a collection of packages\nIt is now a standard in data analysis\nIt is easier to read and keep track of what is happening with the pipe operator %&gt;%\n\n\n\n\n\nThe book is available online"
  },
  {
    "objectID": "slides/Part2/index.html#pipe-the-data-using-magrittr",
    "href": "slides/Part2/index.html#pipe-the-data-using-magrittr",
    "title": "Data manipulation and visualisation",
    "section": "Pipe the data using magrittr",
    "text": "Pipe the data using magrittr\n%&gt;% takes the data from the left and place it to the right\n\nx %&gt;% function() = function(x)\n\n\n\nWithout the pipe operator:\n\niris_subset &lt;- iris[, c(\"Species\", \"Sepal.Length\", \"Sepal.Width\")]\niris_subset$Sepal_Ratio &lt;- iris_subset$Sepal.Length / iris_subset$Sepal.Width\n\naggregate(Sepal_Ratio ~ Species, data = iris_subset, \n                    FUN = function(x) c(Average_ratio = mean(x), \n                                        standard_deviation = sd(x)))\n\n\nWith the pipe operator:\n\nlibrary(magrittr)\niris %&gt;% \n  dplyr::select(Species, Sepal.Length, Sepal.Width) %&gt;%\n  dplyr::mutate(Sepal_Ratio = Sepal.Length/Sepal.Width) %&gt;%\n  dplyr::group_by(Species)%&gt;%\n  dplyr::summarise(Average_ratio = mean(Sepal_Ratio),\n                   standard_deviation = sd(Sepal_Ratio))\n\n\n\n\n\nR 4.1.0 introduced a native pipe operator, |&gt;"
  },
  {
    "objectID": "slides/Part2/index.html#tidy-the-data-with-tidyr",
    "href": "slides/Part2/index.html#tidy-the-data-with-tidyr",
    "title": "Data manipulation and visualisation",
    "section": "Tidy the data with tidyr",
    "text": "Tidy the data with tidyr\n\n\nA table is tidy if:\n\nEach variable is in its own column\nEach observation is in its own row\n\n\nKey functions:\n\npivot_longer\npivot_wider\nunite\nseparate"
  },
  {
    "objectID": "slides/Part2/index.html#tidy-the-data-with-tidyr---iris-example",
    "href": "slides/Part2/index.html#tidy-the-data-with-tidyr---iris-example",
    "title": "Data manipulation and visualisation",
    "section": "Tidy the data with tidyr - iris example",
    "text": "Tidy the data with tidyr - iris example\n\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\nid\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n1\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n2\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n3\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n4\n\n\n\n\n\n\n\n\niris %&lt;&gt;% dplyr::mutate(id = 1:150)\niris |&gt; head(4)"
  },
  {
    "objectID": "slides/Part2/index.html#tidy-the-data-with-tidyr---pivot_longer",
    "href": "slides/Part2/index.html#tidy-the-data-with-tidyr---pivot_longer",
    "title": "Data manipulation and visualisation",
    "section": "Tidy the data with tidyr - pivot_longer",
    "text": "Tidy the data with tidyr - pivot_longer\n\n\n\n\n\nSpecies\nid\nParameter\nSize\n\n\n\n\nsetosa\n1\nSepal.Length\n5.1\n\n\nsetosa\n1\nSepal.Width\n3.5\n\n\nsetosa\n1\nPetal.Length\n1.4\n\n\nsetosa\n1\nPetal.Width\n0.2\n\n\n\n\n\n\n\n\nlong_iris &lt;- iris |&gt; \n  tidyr::pivot_longer(1:4,\n                      names_to = \"Parameter\",\n                      values_to = \"Size\")\nlong_iris |&gt; head(4)"
  },
  {
    "objectID": "slides/Part2/index.html#tidy-the-data-with-tidyr---separate",
    "href": "slides/Part2/index.html#tidy-the-data-with-tidyr---separate",
    "title": "Data manipulation and visualisation",
    "section": "Tidy the data with tidyr - separate",
    "text": "Tidy the data with tidyr - separate\n\n\n\n\n\nSpecies\nid\nOrgan\nMeasure\nSize\n\n\n\n\nsetosa\n1\nSepal\nLength\n5.1\n\n\nsetosa\n1\nSepal\nWidth\n3.5\n\n\nsetosa\n1\nPetal\nLength\n1.4\n\n\nsetosa\n1\nPetal\nWidth\n0.2\n\n\n\n\n\n\n\n\nsep_iris &lt;- long_iris |&gt; \n  tidyr::separate(Parameter, into = c(\"Organ\", \"Measure\"))\nsep_iris |&gt; head(4)"
  },
  {
    "objectID": "slides/Part2/index.html#tidy-the-data-with-tidyr---pivot_wider",
    "href": "slides/Part2/index.html#tidy-the-data-with-tidyr---pivot_wider",
    "title": "Data manipulation and visualisation",
    "section": "Tidy the data with tidyr - pivot_wider",
    "text": "Tidy the data with tidyr - pivot_wider\n\n\n\n\n\nSpecies\nid\nMeasure\nSepal\nPetal\n\n\n\n\nsetosa\n1\nLength\n5.1\n1.4\n\n\nsetosa\n1\nWidth\n3.5\n0.2\n\n\nsetosa\n2\nLength\n4.9\n1.4\n\n\nsetosa\n2\nWidth\n3.0\n0.2\n\n\n\n\n\n\n\n\nwide_iris &lt;- sep_iris |&gt; \n  tidyr::pivot_wider(names_from = \"Organ\",\n                     values_from = \"Size\")\nwide_iris |&gt;  head(4)"
  },
  {
    "objectID": "slides/Part2/index.html#tidy-the-data-with-tidyr---unite",
    "href": "slides/Part2/index.html#tidy-the-data-with-tidyr---unite",
    "title": "Data manipulation and visualisation",
    "section": "Tidy the data with tidyr - unite",
    "text": "Tidy the data with tidyr - unite\n\n\n\n\n\nSpecies\nid\nMeasure\nSepal/Petal\n\n\n\n\nsetosa\n1\nLength\n5.1/1.4\n\n\nsetosa\n1\nWidth\n3.5/0.2\n\n\nsetosa\n2\nLength\n4.9/1.4\n\n\nsetosa\n2\nWidth\n3/0.2\n\n\n\n\n\n\n\n\nunite_iris &lt;- wide_iris |&gt; \n  tidyr::unite(col = \"Sepal/Petal\", c(Sepal, Petal), sep = \"/\")\nunite_iris |&gt;  head(4)"
  },
  {
    "objectID": "slides/Part2/index.html#arrange-the-data-with-dyplr",
    "href": "slides/Part2/index.html#arrange-the-data-with-dyplr",
    "title": "Data manipulation and visualisation",
    "section": "Arrange the data with dyplr",
    "text": "Arrange the data with dyplr\ndplyr simplifies the data manipulation with self-explanatory functions:\n\nfilter observations based on their values\nmutate a new column as a function of others\nselect variables based on their names\ngroup_by variable\nsummarise the data\n\n\niris %&gt;%\n  dplyr::filter(Petal.Length &gt;= 1.4) %&gt;%\n  dplyr::mutate(Sepal_Ratio = Sepal.Length/Sepal.Width) %&gt;%\n  dplyr::select(Species, Sepal_Ratio) %&gt;% # equaivalent to select(-c(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width))\n  dplyr::group_by(Species) %&gt;%\n  dplyr::summarise(Average_ratio = mean(Sepal_Ratio),\n                   standard_deviation = sd(Sepal_Ratio))"
  },
  {
    "objectID": "slides/Part2/index.html#data-visulalisation",
    "href": "slides/Part2/index.html#data-visulalisation",
    "title": "Data manipulation and visualisation",
    "section": "Data visulalisation",
    "text": "Data visulalisation\nIt is very important to look at the data. Totally different data might have similar statistics…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstatistics\nvalue\n\n\n\n\nmean_x\n54.27\n\n\nmean_y\n47.83\n\n\nsd_x\n16.77\n\n\nsd_y\n26.94\n\n\n\n\n\n\n\n\n\n\n\ndatasauRus"
  },
  {
    "objectID": "slides/Part2/index.html#visualise-the-data-with-ggplot2",
    "href": "slides/Part2/index.html#visualise-the-data-with-ggplot2",
    "title": "Data manipulation and visualisation",
    "section": "Visualise the data with ggplot2",
    "text": "Visualise the data with ggplot2\n\n\n\n\n\n\n\n\n\n\n\n\nplot(x = iris$Sepal.Length,\n     y = iris$Sepal.Width)\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\nggplot(iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point()"
  },
  {
    "objectID": "slides/Part2/index.html#visualise-the-data-with-ggplot2-1",
    "href": "slides/Part2/index.html#visualise-the-data-with-ggplot2-1",
    "title": "Data manipulation and visualisation",
    "section": "Visualise the data with ggplot2",
    "text": "Visualise the data with ggplot2\n\n\n\n\n\n\n\n\n\n\n\n\nspecies_palette &lt;- c(\"#F8766D\", \"#00BA38\", \"#619CFF\")\nsize_vector &lt;- iris$Petal.Width\nplot(x = iris$Sepal.Length,\n     y = iris$Sepal.Width,\n     col = species_palette[iris$Species],\n     bg = species_palette[iris$Species],\n     pch = 21,\n     cex = size_vector,\n     xlim = c(min(iris$Sepal.Length), max(iris$Sepal.Length)),\n     ylim = c(min(iris$Sepal.Width), max(iris$Sepal.Width)),\n     xlab = \"Sepal.Length\",\n     ylab = \"Sepal.Width\")\nlegend(\"topright\", legend = levels(iris$Species), col = species_palette, pch = 21, pt.bg = species_palette, cex = 1.2, title = \"Species\")\ngrid(lwd = 1, lty = \"dotted\")\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\nggplot(iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width,\n                     fill = Species,\n                     size = Petal.Width)) +\n  geom_point(shape = 21,\n             col = 1) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/Part2/index.html#grammar-of-graphic-gg",
    "href": "slides/Part2/index.html#grammar-of-graphic-gg",
    "title": "Data manipulation and visualisation",
    "section": "Grammar of graphic (gg)",
    "text": "Grammar of graphic (gg)\n\n\n\n\nData\nAesthetics - Visual characteristics (e.g., x, y, size)\nGeometry - How to represent the data (e.g., lines, point, boxplot)\n\n\n\nStatistics - What statistics to show\nFacets - Split the data\nCoordinates - Position of the geometry\nThemes - Visual changes\n\n\n\nggplot(data = &lt;DATA&gt;,\n       mapping = aes(&lt;AESTHETICS&gt;)) +\n  geom_&lt;GEOMETRY&gt;()"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---data",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---data",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Data",
    "text": "Let’s plot using ggplot2 - Data\n\n\n\nggplot(data = iris)"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---aesthetics",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---aesthetics",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Aesthetics",
    "text": "Let’s plot using ggplot2 - Aesthetics\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width))"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---geometry",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---geometry",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Geometry",
    "text": "Let’s plot using ggplot2 - Geometry\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point()"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---geometry-1",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---geometry-1",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Geometry",
    "text": "Let’s plot using ggplot2 - Geometry\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species))"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---statistics",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---statistics",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Statistics",
    "text": "Let’s plot using ggplot2 - Statistics\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species))"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---facets",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---facets",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Facets",
    "text": "Let’s plot using ggplot2 - Facets\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species)"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---coordinates",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---coordinates",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Coordinates",
    "text": "Let’s plot using ggplot2 - Coordinates\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species) +\n  coord_polar()"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---themes",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---themes",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Themes",
    "text": "Let’s plot using ggplot2 - Themes\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species) +\n  coord_polar() +\n  theme_light()"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---themes-1",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---themes-1",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Themes",
    "text": "Let’s plot using ggplot2 - Themes\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species) +\n  coord_polar() +\n  theme_light() +\n  theme(axis.line = element_line(color = \"red\"))"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---themes-2",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---themes-2",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Themes",
    "text": "Let’s plot using ggplot2 - Themes\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species) +\n  coord_polar() +\n  theme_light() +\n  theme(axis.line = element_line(color = \"red\"),\n        strip.text = element_text(size = 13, color = \"pink\"))"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---extra-tips",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---extra-tips",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Extra tips",
    "text": "Let’s plot using ggplot2 - Extra tips\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species) +\n  coord_polar() +\n  theme_light() +\n  theme(axis.line = element_line(color = \"red\"),\n        strip.text = element_text(size = 13, color = \"pink\")) +\n  labs(title = \"Sepal\", x = \"Length\" , y = \"Width\", subtitle = \"relationship between width\\nand length\", caption = \"Caption appear here\")"
  },
  {
    "objectID": "slides/Part2/index.html#lets-plot-using-ggplot2---extra-tips-1",
    "href": "slides/Part2/index.html#lets-plot-using-ggplot2---extra-tips-1",
    "title": "Data manipulation and visualisation",
    "section": "Let’s plot using ggplot2 - Extra tips",
    "text": "Let’s plot using ggplot2 - Extra tips\n\n\n\nggplot(data = iris,\n       mapping = aes(x = Sepal.Length,\n                     y = Sepal.Width)) +\n  geom_point(mapping = aes(col = Species)) +\n  stat_smooth(method = \"lm\") +\n  stat_smooth(method = \"lm\",\n              mapping = aes(col = Species,\n                            fill = Species)) +\n  facet_wrap(~Species) +\n  coord_polar() +\n  theme_light() +\n  theme(axis.line = element_line(color = \"red\"),\n        strip.text = element_text(size = 13, color = \"pink\")) +\n  labs(title = \"Sepal\", x = \"Length\" , y = \"Width\", subtitle = \"relationship between width\\nand length\", caption = \"Caption appear here\") +\n  scale_color_manual(values = c(\"forestgreen\", \"firebrick\", \"burlywood\"))"
  },
  {
    "objectID": "tutorial/Part1/index.html",
    "href": "tutorial/Part1/index.html",
    "title": "TutoRial - Part 1",
    "section": "",
    "text": "As seen during the presentation, we will keep track of our progress. We thus need to open a new script following one of the option below.\n\n\n\n\nflowchart LR\n  A[1. File] --&gt; B[2. New File]\n  B --&gt; C[3. R script]\n\n\n\n\n\n\n\n\n\nflowchart LR\n  A[\"⌘/Ctlr + ⇧ + N\"]"
  },
  {
    "objectID": "tutorial/Part1/index.html#new-script",
    "href": "tutorial/Part1/index.html#new-script",
    "title": "TutoRial - Part 1",
    "section": "",
    "text": "As seen during the presentation, we will keep track of our progress. We thus need to open a new script following one of the option below.\n\n\n\n\nflowchart LR\n  A[1. File] --&gt; B[2. New File]\n  B --&gt; C[3. R script]\n\n\n\n\n\n\n\n\n\nflowchart LR\n  A[\"⌘/Ctlr + ⇧ + N\"]"
  },
  {
    "objectID": "tutorial/Part1/index.html#r-syntax",
    "href": "tutorial/Part1/index.html#r-syntax",
    "title": "TutoRial - Part 1",
    "section": "R syntax",
    "text": "R syntax\nR is a programming language that use a simplified syntax. In this section, you will explore how to write a script and execute it.\nBut first some syntax information:\n\nEverything after # is considered as a command and will not be executed. It is very important to write what we are doing, so we do not get lost next time we open our scripts.\n\n\n# 2 + 2 will not work because of the #\n2 + 2 # We should then annotate our script like this\n#&gt; [1] 4\n\n\nSeveral lines of code can be written in one line but must be separated by\n\n\n2 + 2\n#&gt; [1] 4\n3 * 2\n#&gt; [1] 6\n\n# This can also be written as follow:\n2 + 2 ; 3 * 2\n#&gt; [1] 4\n#&gt; [1] 6\n\n\nIn R we can name a function, vector, or other object using =, &lt;-, -&gt; or assign\n\n\nc(1, 2, 3, 4) -&gt; my_first_vector\nmy_vector &lt;- c(1, 2, 3, 4)\nmy_function = function(x){x + 2}\nassign(\"x\", c(2, 3, 4, 5))\n\n\n== is a logical function that can be translated as is equal to, contrarily is not equal to is written !=\n\n\n2 + 2 == 4\n#&gt; [1] TRUE\n3 * 2 == 4\n#&gt; [1] FALSE\n3 * 2 != 4\n#&gt; [1] TRUE\n\n\nExercises\n\nDo these calculations in a new R script\n\n\n\\ 2^7\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n2^7\n#&gt; [1] 128\n\n\n\n\n\n\\ cos(\\pi)\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?cos()\n?pi()\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncos(pi)\n#&gt; [1] -1\n\n\n\n\n\n\\ \\sum_{1}^{100} i\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nOperations can take place for an entire vector\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nvector &lt;- seq(from = 1, to = 100, by = 1) # Create a vector from 1 to 100\nsum(vector) # Calculate the sum\n#&gt; [1] 5050\n\n\n\n\n\nCreate a parameter x1 that equals to 5 and a parameter x2 that equals to 10\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nx1 &lt;- 5 ; x2 &lt;-  10\n\n\n\n\n\nIs 2x1 equivalent to x2?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n2*x1 == x2\n#&gt; [1] TRUE"
  },
  {
    "objectID": "tutorial/Part1/index.html#functions",
    "href": "tutorial/Part1/index.html#functions",
    "title": "TutoRial - Part 1",
    "section": "Functions",
    "text": "Functions\nAs seen during the lecture, R works with functions that can:\n\nAlready be implemented in base R\nComming from another package\nCreated by the user\n\nWe will see these three examples in this section, but first it is important to remember that the typical structure of a function is function(argument_1, ...). It is impossible to remember what are all the argument, but fortunately R helps us:\n\nUsing help() or ?\n\n\nhelp(topic = \"sin\")\n?sin\n\n\n\nUsing example\n\n\nexample(sum)\n#&gt; \n#&gt; sum&gt; ## Pass a vector to sum, and it will add the elements together.\n#&gt; sum&gt; sum(1:5)\n#&gt; [1] 15\n#&gt; \n#&gt; sum&gt; ## Pass several numbers to sum, and it also adds the elements.\n#&gt; sum&gt; sum(1, 2, 3, 4, 5)\n#&gt; [1] 15\n#&gt; \n#&gt; sum&gt; ## In fact, you can pass vectors into several arguments, and everything gets added.\n#&gt; sum&gt; sum(1:2, 3:5)\n#&gt; [1] 15\n#&gt; \n#&gt; sum&gt; ## If there are missing values, the sum is unknown, i.e., also missing, ....\n#&gt; sum&gt; sum(1:5, NA)\n#&gt; [1] NA\n#&gt; \n#&gt; sum&gt; ## ... unless  we exclude missing values explicitly:\n#&gt; sum&gt; sum(1:5, NA, na.rm = TRUE)\n#&gt; [1] 15\n\nFor the functions that comes from another package, we first need to install the new packages. The most common way to do so is by executing install.packages(\"Package_Name\"). Then everytime you open a new session and you want to use the package, start the script by executing library(Package_Name).\nFinally, if you really do not find a suitable function in a package, or want to create your own function, you can create your functions following this general structure:\n\nmy_function &lt;- function(&lt;argument_1&gt;, &lt;argument_2&gt;, ...){\n  &lt;here comes the definition of my function&gt;\n  return(&lt;output of the definition&gt;)\n}\n\n\nExercises\n\nWhat is the function log() doing and from were does this function come from (base R, other packages)?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n?log() #It takes the natural logarithm of the value, it comes from base R\nlog(10) \n\n\n\n\n\nWhat are the mandatory arguments for the function plot()\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n?plot() # the coordinates points x and y are needed\n\n\n\n\n\nInstall the package named readr and load it\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ninstall.packages(\"readr\")\nlibrary(readr)\n\n\n\n\n\nIs there help associated with the functions from a loaded package?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe function read_csv comes from this package\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n?read_csv # Yes, there is also help for the imported functions\n\n\n\n\n\n\n\n\n\n\nOptional exercises\n\n\n\n\nCreate a function that print Hello World! when executing it\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nHello &lt;- function(){\n  cat(\"Hello World!\") # print(\"Hello World!\") works too\n}\nHello()\n#&gt; Hello World!\n\n\n\n\n\nCreate a function that multiply the input by 4\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nmultiplyeR &lt;- function(x, y = 4){\n  return(x * y)\n}\nmultiplyeR(x = 2) # It works with values\n#&gt; [1] 8\nmultiplyeR(x = seq(1, 3, 1)) # But also vectors\n#&gt; [1]  4  8 12"
  },
  {
    "objectID": "tutorial/Part1/index.html#vectors",
    "href": "tutorial/Part1/index.html#vectors",
    "title": "TutoRial - Part 1",
    "section": "Vectors",
    "text": "Vectors\nR works with vector from which we can do our calculations. There is several way to create a vector:\n\nUsing c() values are added next to each other\n\n\nc(1, 2, 1, 4) # It works with integers (round numbers)\n#&gt; [1] 1 2 1 4\nc(1.1, 2.4, pi) # It works with floats (decimal numbers)\n#&gt; [1] 1.100000 2.400000 3.141593\nc(\"chocolate\", \"ice-cream\") # It works with character\n#&gt; [1] \"chocolate\" \"ice-cream\"\nc(TRUE, FALSE) # It works with logical variables\n#&gt; [1]  TRUE FALSE\n\n\nUsing rep() to repeat the same values\n\n\nrep(3, 2) # It works with integers\n#&gt; [1] 3 3\nrep(3.2, 3) # It works with floats\n#&gt; [1] 3.2 3.2 3.2\nrep(\"chocolate\", 2) # It works with character\n#&gt; [1] \"chocolate\" \"chocolate\"\nrep(TRUE, 3) # It works with logical variables\n#&gt; [1] TRUE TRUE TRUE\n\n\nFor numeric values (integers and floats) we can also use seq that produce a sequence from a value to another one\n\n\nseq(from = 2, to = 6, by = 2)\n#&gt; [1] 2 4 6\nseq(from = 0, to = 1, by = 0.2)\n#&gt; [1] 0.0 0.2 0.4 0.6 0.8 1.0\n\n\n\n\n\n\n\nTip\n\n\n\nif you want to do a sequence using by = 1 it is easier to write it like this: from:to\n\n1:10\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\nseq(from = 1, to = 10, by = 1) == 1:10\n#&gt;  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\n\nFinally, we can also combine vector together\n\n\nc(c(2, 1), seq(from = 2, to = 4, by = 0.5), rep(\"a\", 2))\n#&gt; [1] \"2\"   \"1\"   \"2\"   \"2.5\" \"3\"   \"3.5\" \"4\"   \"a\"   \"a\"\n\n\nExercises\n\nCreate a vector v1 that contains the values 3, 5, 1, 2, 6\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nv1 &lt;- c(3, 5, 1, 2, 6)\n\n\n\n\n\nCreate a vector v2 that contains four times the values 3, 5, 1, 2, 6\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nv2 &lt;- rep(v1, 4)\n\n\n\n\n\nCreate a vector v3 that repeats TRUE, FALSE 5 times\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nv3 &lt;- rep(c(TRUE, FALSE), 5)\n\n\n\n\n\nCreate a vector v4 that goes from 10 to 200\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nv4 &lt;- 10:200\n\n\n\n\n\nCreate a vector v5 that contains v1, v2, v3 and 2 times v4\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nv5 &lt;- c(v1, v2, v3, rep(v4, 2))"
  },
  {
    "objectID": "tutorial/Part1/index.html#tibbles",
    "href": "tutorial/Part1/index.html#tibbles",
    "title": "TutoRial - Part 1",
    "section": "Tibbles",
    "text": "Tibbles\nNow that we have seen how to create vectors, we can start combining them in a dataframe, called tibble.\n\nFirst, load (and install if it is not done install.packages(\"tibble\")) thetibble package.\n\n\nlibrary(tibble)\n?tibble\n\n\nSecond, fill a tibble\n\n\ntibble(Plankton_type = c(rep(\"Zooplankton\", 6), rep(\"Phytoplankton\", 6)),\n       Biomass = c(65, 12, 42, 51, 23, 72, 10, 11, 21, 14, 23, 13))\n#&gt; # A tibble: 12 × 2\n#&gt;    Plankton_type Biomass\n#&gt;    &lt;chr&gt;           &lt;dbl&gt;\n#&gt;  1 Zooplankton        65\n#&gt;  2 Zooplankton        12\n#&gt;  3 Zooplankton        42\n#&gt;  4 Zooplankton        51\n#&gt;  5 Zooplankton        23\n#&gt;  6 Zooplankton        72\n#&gt;  7 Phytoplankton      10\n#&gt;  8 Phytoplankton      11\n#&gt;  9 Phytoplankton      21\n#&gt; 10 Phytoplankton      14\n#&gt; 11 Phytoplankton      23\n#&gt; 12 Phytoplankton      13\n\n\nThen, we can access the individual vector (or column of the tibble) using $ or [[]]\n\n\nexample &lt;- tibble(Plankton_type = c(rep(\"Zooplankton\", 6), rep(\"Phytoplankton\", 6)),\n       Biomass = c(65, 12, 42, 51, 23, 72, 10, 11, 21, 14, 23, 13))\n\nexample$Plankton_type\n#&gt;  [1] \"Zooplankton\"   \"Zooplankton\"   \"Zooplankton\"   \"Zooplankton\"  \n#&gt;  [5] \"Zooplankton\"   \"Zooplankton\"   \"Phytoplankton\" \"Phytoplankton\"\n#&gt;  [9] \"Phytoplankton\" \"Phytoplankton\" \"Phytoplankton\" \"Phytoplankton\"\nexample[[2]]\n#&gt;  [1] 65 12 42 51 23 72 10 11 21 14 23 13\n\n\nExercises\n\nCreate a tibble named df that look like this:\n\n\n\n\n\n\nGenus\nStation\nAbundance\n\n\n\n\nAcartia\nB1\n65.6\n\n\nCentropages\nB1\n32.6\n\n\nCentropages\nB1\n68.8\n\n\nAcartia\nB1\n91.0\n\n\nTemora\nB1\n53.4\n\n\nTemora\nB1\n89.6\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf &lt;- tibble(Genus = c(\"Acartia\", \"Centropages\", \"Centropages\", \"Acartia\", \"Temora\", \"Temora\"),\n       Station = \"B1\",\n       Abundance = c(65.6, 32.6, 68.8, 91.0, 53.4, 89.6))\n\n\n\n\n\nCreate a vector output that correspond to the column Abundance of the tibble df\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\noutput &lt;- df$Abundance # or df[[3]]"
  },
  {
    "objectID": "tutorial/Part1/index.html#importing-data",
    "href": "tutorial/Part1/index.html#importing-data",
    "title": "TutoRial - Part 1",
    "section": "Importing data",
    "text": "Importing data\nOften, we are not preparing our dataset in R. Thus, importing dataset is essential to process our data. To do so, we will see how to use the read_* function from the readr package.\n\n\n\n\n\n\nTip\n\n\n\nWhen saving our spreadsheet, it is always a good idea to save the document as .csv\n\n\nA typical data import look like this\n\nSet the working directory with its absolute path. So every time you want to import/export, you can use the relative path writen as ./...\n\n\nsetwd(\"/Absolute/Path/To/Working/Directory\") \n\n\nLoad the readr package\n\n\nlibrary(readr)\n\n\nImport you dataset\n\n\ndf &lt;- read_csv(\"./The/relative/path/to/my/dataset.csv\")\n\n\nExamine the data if the importation worked well\n\n\nstr(df)\n\n\nExercises\n\nImport and inspect the dataset zooplankton_seasonality.csv\n\n\n\n\n Download zooplankton_seasonality.csv\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton_seasonality &lt;- read_csv(\"./../../assets/data/zooplankton_seasonality.csv\")\nstr(plankton_seasonality)\n\nor\n\nsetwd(\"/Users/kinlan/OneDrive - Stockholm University/PhD/Teaching/MarineEcosystemDynamics2023/Tutorial\")\nplankton_seasonality &lt;- read_csv(\"./Data/zooplankton_seasonality.csv\")\nstr(plankton_seasonality)\n\n\n#&gt; Warning: One or more parsing issues, call `problems()` on your data frame for details,\n#&gt; e.g.:\n#&gt;   dat &lt;- vroom(...)\n#&gt;   problems(dat)\n#&gt; Rows: 2956 Columns: 1\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr (1): Month_abb;Year;Station;Coordinates;Group;Taxa;Biomass\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#&gt; spc_tbl_ [2,956 × 1] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#&gt;  $ Month_abb;Year;Station;Coordinates;Group;Taxa;Biomass: chr [1:2956] \"Jan;2009;BY15;20.05000/57.33333;Copepoda;Acartia;6,650318700000000\" \"Jan;2009;BY31;18.23333/58.58812;Copepoda;Acartia;1,816994100000000\" \"Jan;2009;BY5;15.98333/55.25000;Copepoda;Acartia;5,562097450000000\" \"Jan;2009;BY15;20.05000/57.33333;Copepoda;Centropages;5,738561499999999\" ...\n#&gt;  - attr(*, \"spec\")=\n#&gt;   .. cols(\n#&gt;   ..   `Month_abb;Year;Station;Coordinates;Group;Taxa;Biomass` = col_character()\n#&gt;   .. )\n#&gt;  - attr(*, \"problems\")=&lt;externalptr&gt;\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nSometimes it is tricky to import directly in the good format, so it might be better to specify that the new dataset is a tibble\n\nplankton_seasonality &lt;- as_tibble(plankton_seasonality)\nstr(plankton_seasonality)\n#&gt; tibble [2,956 × 1] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ Month_abb;Year;Station;Coordinates;Group;Taxa;Biomass: chr [1:2956] \"Jan;2009;BY15;20.05000/57.33333;Copepoda;Acartia;6,650318700000000\" \"Jan;2009;BY31;18.23333/58.58812;Copepoda;Acartia;1,816994100000000\" \"Jan;2009;BY5;15.98333/55.25000;Copepoda;Acartia;5,562097450000000\" \"Jan;2009;BY15;20.05000/57.33333;Copepoda;Centropages;5,738561499999999\" ...\n\n\n\n\n\nHow many rows and columns are there in this dataset?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nnrow(plankton_seasonality)\n#&gt; [1] 2956\nncol(plankton_seasonality)\n#&gt; [1] 1\n\n\n\n\n\nWrite the dataset df that you created in your working directory\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nwrite_csv(df, file = \"./Data/df.csv\")\n\n\n\n\n\n\n\n\n\n\nOptional exercises\n\n\n\n\nImport the dataset phytoplankton_seasonality available here using readr\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThis time it is a .txt file and not a .csv file\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThis file is separated by tabs. In R tabs are written as \\t\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton_df &lt;- read_delim(\"./../../assets/data/phytoplankton_seasonality.txt\", delim = \"\\t\") |&gt; \n  as_tibble()\n#&gt; Rows: 236 Columns: 6\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \"\\t\"\n#&gt; chr (4): Month_abb, Station, Coordinates, Taxa\n#&gt; dbl (2): Year, Biomass\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nstr(phytoplankton_df)\n#&gt; tibble [236 × 6] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ Month_abb  : chr [1:236] \"Jan\" \"Jan\" \"Jan\" \"Jan\" ...\n#&gt;  $ Year       : num [1:236] 2012 2012 2012 2012 2012 ...\n#&gt;  $ Station    : chr [1:236] \"BY15\" \"BY5\" \"BY15\" \"BY5\" ...\n#&gt;  $ Coordinates: chr [1:236] \"20.05000/57.33333\" \"15.98333/55.25000\" \"20.05000/57.33333\" \"15.98333/55.25000\" ...\n#&gt;  $ Taxa       : chr [1:236] \"Cyanobacteria\" \"Cyanobacteria\" \"Diatoms\" \"Diatoms\" ...\n#&gt;  $ Biomass    : num [1:236] 0.0828 0.0603 0.1149 1.7211 1.1886 ...\n\n\n\n\n\nWhat is the 4th column of this dataset?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton_df[4]\n#&gt; # A tibble: 236 × 1\n#&gt;    Coordinates      \n#&gt;    &lt;chr&gt;            \n#&gt;  1 20.05000/57.33333\n#&gt;  2 15.98333/55.25000\n#&gt;  3 20.05000/57.33333\n#&gt;  4 15.98333/55.25000\n#&gt;  5 20.05000/57.33333\n#&gt;  6 15.98333/55.25000\n#&gt;  7 20.05000/57.33333\n#&gt;  8 15.98333/55.25000\n#&gt;  9 20.05000/57.33333\n#&gt; 10 15.98333/55.25000\n#&gt; # ℹ 226 more rows\n\n\n\n\n\nWhat are the values of this 4th column?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton_df[[4]] |&gt; \n  unique()\n#&gt; [1] \"20.05000/57.33333\" \"15.98333/55.25000\"\n\n\n\n\n\nHow many observations are in this dataset?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nnrow(phytoplankton_df)\n#&gt; [1] 236\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe decimal operator is not the same depending on the countries. For example in Sweden the default decimal operator is , but often the default decimal operator is .\nIt might therefore be important to change this setting when loading a dataset. This can be achieved using the locale function in the read_* function!\n\nread_delim(file = ...,\n           delim = \";\",\n           locale = locale(decimal_mark = \",\"))"
  },
  {
    "objectID": "tutorial/Part2 /index.html",
    "href": "tutorial/Part2 /index.html",
    "title": "TutoRial - Part 2",
    "section": "",
    "text": "The goal of this tutorial is to be familiar with the tidyverse, especially with tidyr, dplyr, and ggplot2 and to learn how to handle our datasets."
  },
  {
    "objectID": "tutorial/Part2 /index.html#pipes",
    "href": "tutorial/Part2 /index.html#pipes",
    "title": "TutoRial - Part 2",
    "section": "Pipes",
    "text": "Pipes\nPipes are very useful and powerful to let the data flow from one function to another. This was first implemented in the magrittr packages with pipes that looks like this: %&gt;%. This was so powerful, that in the versio 4.1.0 of R native pipes operator were launched and they look like this: |&gt;.\n\n\n\n\n\n\nTips\n\n\n\n\nThe easiest way to write the pipe is by using the keys: ⌘/Ctlr + ⇧ + M.\nIn the parameters you can choose if you want to use the native pipe operator when using these keys.\n\n\n\n\nExercises\n\nRewrite this chunks of code using the pipes\n\n\nsum(c(1,2,3,4,5))\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nc(1,2,3,4,5) |&gt; \n  sum()\n\n\n\n\n\nround(mean(seq(from = 0, to = 1.5, by = 0.2)), 2)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nseq(from = 0, to = 1.5, by = 0.2) |&gt; \n  mean() |&gt; \n  round(2)\n\n\n\n\n\nplot(sample(rnorm(10000, 20, 10), 200, replace = TRUE),y = sample(1:20, 200, replace = TRUE))\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nrnorm(10000, 20, 10) |&gt; \n  sample(200, replace = TRUE) |&gt; \n  plot(y = sample(1:20, 200, replace = TRUE))"
  },
  {
    "objectID": "tutorial/Part2 /index.html#tidy-the-data-with-tidyr",
    "href": "tutorial/Part2 /index.html#tidy-the-data-with-tidyr",
    "title": "TutoRial - Part 2",
    "section": "Tidy the data with tidyr",
    "text": "Tidy the data with tidyr\nAs seen during the lecture, the concept of a tidy table is that:\n\nEach variable is in its own column\nEach observation is in its own row\n\nTo reach the tidy concept, we can use 4 key functions:\n\npivot_longer - it transforms a wide dataset into a long dataset\npivot_wider - it transforms a long dataset into a wide dataset\nunite - it unifies 2 columns into 1\nseparate - it separates 1 columns into 2\n\n\nExercises\nFrom this point onwards, we will use the datasets available in the package PlanktonData. All the raw data come from SHARKweb.\n\nInstall devtools and then PlanktonData.\n\n\ninstall.packages(\"devtools\")\ndevtools::install_github(\"KMGJan/PlanktonData\")\n\n\nLoad the dataset zooplankton in your environment\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nCoordinates\nGroup\nTaxa\nBiomass\n\n\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n6.6503187\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n1.8169941\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n5.5620974\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n5.7385615\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n1.2287586\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n14.4052240\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n10.5228820\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n5.6339840\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n21.5947750\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n9.7254882\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n4.9934649\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n45.7385290\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.4705890\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n2.4673193\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n2.2483670\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n0.3071893\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n0.3856208\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nEurytemora\n0.0849674\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n13.6013010\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n2.6601280\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n7.5490209\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n8.4183010\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.1568628\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.4117650\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n5.0653670\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n6.0653592\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n9.6209217\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n2.9803908\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n0.7058820\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n1.8692823\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nEurytemora\n1.6078432\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n49.6601350\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n3.3071872\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n3.7777770\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n36.4313840\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n17.2418325\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n47.3595100\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.5490210\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.1960785\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.6666660\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n4.7200063\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n3.5399988\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n15.0200000\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n10.7066649\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nRotatoria\nKeratella\n0.0100000\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.4400010\n\n\nJan\n2016\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n2.4866676\n\n\nJan\n2016\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n1.4616663\n\n\nJan\n2016\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n8.6866656\n\n\nJan\n2016\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n6.2266595\n\n\nJan\n2016\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n1.5533334\n\n\nJan\n2016\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n6.1800078\n\n\nJan\n2016\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n2.8066655\n\n\nJan\n2016\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n1.8949995\n\n\nJan\n2016\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n17.6533153\n\n\nJan\n2016\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n0.9066675\n\n\nJan\n2016\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n17.8799791\n\n\nJan\n2016\nBY5\n15.98333/55.25000\nRotatoria\nKeratella\n0.0500000\n\n\nJan\n2016\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.9200010\n\n\nJan\n2016\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.2000001\n\n\nJan\n2016\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.8199990\n\n\nJan\n2017\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n3.7200071\n\n\nJan\n2017\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n3.0466673\n\n\nJan\n2017\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n2.7533319\n\n\nJan\n2017\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n0.5666663\n\n\nJan\n2017\nBY31\n18.23333/58.58812\nCopepoda\nEurytemora\n0.2600000\n\n\nJan\n2017\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n5.5399920\n\n\nJan\n2017\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n2.5600009\n\n\nJan\n2017\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n2.1333311\n\n\nJan\n2017\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n14.0999830\n\n\nJan\n2017\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n0.8799999\n\n\nJan\n2017\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.2799999\n\n\nJan\n2017\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.4400010\n\n\nJan\n2018\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n16.6199952\n\n\nJan\n2018\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n7.3466575\n\n\nJan\n2018\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n6.5233210\n\n\nJan\n2018\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n19.6533255\n\n\nJan\n2018\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.0800001\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nCladocera\nBosmina\n0.0333332\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nCladocera\nEvadne\n2.0000010\n\n\nJan\n2019\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n6.8733320\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n23.1800075\n\n\nJan\n2019\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n1.3066646\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n10.7066665\n\n\nJan\n2019\nBY31\n18.23333/58.58812\nCopepoda\nEurytemora\n0.5066654\n\n\nJan\n2019\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n1.9599995\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n4.9000011\n\n\nJan\n2019\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n12.6533285\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n57.7600260\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nRotatoria\nKeratella\n0.6199995\n\n\nJan\n2019\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.2400000\n\n\nJan\n2019\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.7200000\n\n\nJan\n2020\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n8.3133342\n\n\nJan\n2020\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n24.2666615\n\n\nJan\n2020\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n6.7866703\n\n\nJan\n2020\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n13.5400054\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(PlanktonData)\ndata(zooplankton)\n\n\n\n\n\nIs this dataset a tidy table?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nstr(zooplankton)\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n✓ Each variable is in its own column ✓ Each observation is in its own row\n… But Coordinates contains 2 values (Latitude/Longitude)\n\n\n\n\nSeparate Coordinates in 2 columns: Longitude and Latitude\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nGroup\nTaxa\nBiomass\n\n\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n6.6503187\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n1.8169941\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n5.5620974\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n5.7385615\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n1.2287586\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n14.4052240\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n10.5228820\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n5.6339840\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n21.5947750\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n9.7254882\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n4.9934649\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n45.7385290\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.4705890\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n2.4673193\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n2.2483670\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n0.3071893\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n0.3856208\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nEurytemora\n0.0849674\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n13.6013010\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n2.6601280\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n7.5490209\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n8.4183010\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.1568628\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.4117650\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n5.0653670\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n6.0653592\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n9.6209217\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n2.9803908\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n0.7058820\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n1.8692823\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nEurytemora\n1.6078432\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n49.6601350\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n3.3071872\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n3.7777770\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n36.4313840\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n17.2418325\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n47.3595100\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.5490210\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.1960785\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.6666660\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n4.7200063\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n3.5399988\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n15.0200000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n10.7066649\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria\nKeratella\n0.0100000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.4400010\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n2.4866676\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n1.4616663\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n8.6866656\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n6.2266595\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n1.5533334\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n6.1800078\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n2.8066655\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n1.8949995\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n17.6533153\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n0.9066675\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n17.8799791\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nRotatoria\nKeratella\n0.0500000\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.9200010\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.2000001\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.8199990\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n3.7200071\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n3.0466673\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n2.7533319\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n0.5666663\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda\nEurytemora\n0.2600000\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n5.5399920\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n2.5600009\n\n\nJan\n2017\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n2.1333311\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n14.0999830\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n0.8799999\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.2799999\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.4400010\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n16.6199952\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n7.3466575\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n6.5233210\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n19.6533255\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.0800001\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCladocera\nBosmina\n0.0333332\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCladocera\nEvadne\n2.0000010\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n6.8733320\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n23.1800075\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n1.3066646\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n10.7066665\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda\nEurytemora\n0.5066654\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n1.9599995\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n4.9000011\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n12.6533285\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n57.7600260\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nRotatoria\nKeratella\n0.6199995\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.2400000\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.7200000\n\n\nJan\n2020\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n8.3133342\n\n\nJan\n2020\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n24.2666615\n\n\nJan\n2020\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n6.7866703\n\n\nJan\n2020\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n13.5400054\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nzooplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\")\n\n\n\n\n\nUnite Group and Taxa to create Group_Taxa\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nGroup_Taxa\nBiomass\n\n\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n6.6503187\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n1.8169941\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n5.5620974\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n5.7385615\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n1.2287586\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n14.4052240\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n10.5228820\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n5.6339840\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n21.5947750\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n9.7254882\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n4.9934649\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n45.7385290\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.3921570\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.4705890\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.3921570\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n2.4673193\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n2.2483670\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n0.3071893\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n0.3856208\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Eurytemora\n0.0849674\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n13.6013010\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n2.6601280\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n7.5490209\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n8.4183010\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.1568628\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.4117650\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n5.0653670\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n6.0653592\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n9.6209217\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n2.9803908\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n0.7058820\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n1.8692823\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Eurytemora\n1.6078432\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n49.6601350\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n3.3071872\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n3.7777770\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n36.4313840\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n17.2418325\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n47.3595100\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria_Keratella\n0.0196078\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria_Keratella\n0.0196078\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.5490210\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.1960785\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.6666660\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n4.7200063\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n3.5399988\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n15.0200000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n10.7066649\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria_Keratella\n0.0100000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.4400010\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n2.4866676\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n1.4616663\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n8.6866656\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n6.2266595\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n1.5533334\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n6.1800078\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n2.8066655\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n1.8949995\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n17.6533153\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n0.9066675\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n17.8799791\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nRotatoria_Keratella\n0.0500000\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.9200010\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.2000001\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.8199990\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n3.7200071\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n3.0466673\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n2.7533319\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n0.5666663\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda_Eurytemora\n0.2600000\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n5.5399920\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n2.5600009\n\n\nJan\n2017\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n2.1333311\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n14.0999830\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n0.8799999\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.2799999\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.4400010\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n16.6199952\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n7.3466575\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n6.5233210\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n19.6533255\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.0800001\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCladocera_Bosmina\n0.0333332\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCladocera_Evadne\n2.0000010\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n6.8733320\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n23.1800075\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n1.3066646\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n10.7066665\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda_Eurytemora\n0.5066654\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n1.9599995\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n4.9000011\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n12.6533285\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n57.7600260\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nRotatoria_Keratella\n0.6199995\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.2400000\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.7200000\n\n\nJan\n2020\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n8.3133342\n\n\nJan\n2020\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n24.2666615\n\n\nJan\n2020\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n6.7866703\n\n\nJan\n2020\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n13.5400054\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nzooplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  unite(col = \"Group_Taxa\", c(Group, Taxa))\n\n\n\n\n\nMake a wide table with columns showing the Biomass values for each Group_Taxa\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nCopepoda_Acartia\nCopepoda_Centropages\nCopepoda_Pseudocalanus\nCopepoda_Temora\nRotatoria_Synchaeta\nCopepoda_Eurytemora\nRotatoria_Keratella\nCladocera_Bosmina\nCladocera_Evadne\nCladocera_Podon\n\n\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\n6.6503187\n5.7385615\n10.5228820\n9.7254882\n0.3921570\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\n1.8169941\n1.2287586\n5.6339840\n4.9934649\n0.4705890\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\n5.5620974\n14.4052240\n21.5947750\n45.7385290\n0.3921570\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\n2.4673193\n0.3071893\n13.6013010\n7.5490209\n0.1568628\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\n2.2483670\n0.3856208\n2.6601280\n8.4183010\n0.4117650\n0.0849674\nNA\nNA\nNA\nNA\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\n5.0653670\n2.9803908\n49.6601350\n36.4313840\n0.5490210\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\n6.0653592\n0.7058820\n3.3071872\n17.2418325\n0.1960785\n1.6078432\n0.0196078\nNA\nNA\nNA\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\n9.6209217\n1.8692823\n3.7777770\n47.3595100\n0.6666660\nNA\n0.0196078\nNA\nNA\nNA\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\n4.7200063\n3.5399988\n15.0200000\n10.7066649\n0.4400010\nNA\n0.0100000\nNA\nNA\nNA\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\n2.4866676\n6.2266595\nNA\n17.6533153\n0.9200010\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\n1.4616663\n1.5533334\n2.8066655\n0.9066675\n0.2000001\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\n8.6866656\n6.1800078\n1.8949995\n17.8799791\n0.8199990\nNA\n0.0500000\nNA\nNA\nNA\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\n3.7200071\n2.7533319\n5.5399920\n14.0999830\n0.2799999\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\n3.0466673\n0.5666663\n2.5600009\n0.8799999\n0.4400010\n0.2600000\nNA\nNA\nNA\nNA\n\n\nJan\n2017\nBY5\n15.98333\n55.25000\nNA\nNA\n2.1333311\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\n16.6199952\n7.3466575\n6.5233210\n19.6533255\n0.0800001\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\n23.1800075\n10.7066665\n4.9000011\n57.7600260\n0.7200000\nNA\n0.6199995\n0.0333332\n2.0000010\nNA\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\n6.8733320\n1.3066646\n1.9599995\n12.6533285\n0.2400000\n0.5066654\nNA\nNA\nNA\nNA\n\n\nJan\n2020\nBY15\n20.05000\n57.33333\n8.3133342\n6.7866703\n7.3066620\n14.4400057\n0.0399999\nNA\n0.0100000\nNA\nNA\nNA\n\n\nJan\n2020\nBY5\n15.98333\n55.25000\n24.2666615\n13.5400054\n2.6533343\n23.5466793\n0.1400001\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2021\nBY31\n18.23333\n58.58812\n2.3799989\n0.7699998\n0.6720001\n0.8866667\n0.0399999\n0.0333333\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2009\nBY15\n20.05000\n57.33333\n4.5620851\n6.5359550\n2.0718956\n7.7647077\n0.3137250\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2009\nBY31\n18.23333\n58.58812\n2.1045759\n2.3398701\n4.5653635\n4.8496740\n0.3529410\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2009\nBY5\n15.98333\n55.25000\n2.9084958\n19.3333680\n5.5457519\n40.3137360\n0.3137250\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2010\nBY15\n20.05000\n57.33333\n7.8562004\n2.0915040\n1.8718946\n9.8235324\n0.0392157\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2010\nBY5\n15.98333\n55.25000\n8.4052182\n6.9934715\n15.5490030\n13.4248350\n0.1960785\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2013\nBY31\n18.23333\n58.58812\n1.1552277\n1.1013079\n2.9616028\n11.4738560\n0.0882352\n0.0849674\n0.0098039\nNA\nNA\nNA\n\n\nFeb\n2013\nBY5\n15.98333\n55.25000\nNA\nNA\n4.8575163\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2014\nBY31\n18.23333\n58.58812\n0.4509799\n0.9248368\n4.8163384\n7.6928012\n0.0882352\nNA\n0.0098039\nNA\nNA\nNA\n\n\nFeb\n2014\nBY5\n15.98333\n55.25000\n7.6078378\n3.6209163\n7.9607840\n37.1111384\n0.1568628\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2015\nBY5\n15.98333\n55.25000\n5.1966737\n4.0933392\n7.2983329\n7.0599986\n0.1800000\nNA\nNA\n0.0166667\nNA\nNA\n\n\nFeb\n2015\nBY15\n20.05000\n57.33333\n1.5866677\n0.3533334\n1.9693346\n0.7000003\n0.8600010\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2015\nBY31\n18.23333\n58.58812\n1.4066646\n0.8000000\nNA\n0.3599991\n0.3600000\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2016\nBY15\n20.05000\n57.33333\n1.6966665\n3.3833390\nNA\n0.8833339\n0.2199999\nNA\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2016\nBY31\n18.23333\n58.58812\n0.9933338\n2.7733390\n0.7226666\n3.2799991\n0.1599999\n0.1733329\nNA\nNA\nNA\nNA\n\n\nFeb\n2016\nBY5\n15.98333\n55.25000\n9.0199986\n38.9333170\n1.5266680\n18.7200200\n1.3599990\nNA\n0.0199999\nNA\nNA\nNA\n\n\nFeb\n2017\nBY15\n20.05000\n57.33333\n3.8166672\n2.2700006\n11.6366740\n5.9499977\n0.0500001\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2017\nBY31\n18.23333\n58.58812\n4.9733265\n1.5399979\n2.3733321\n2.3066642\n0.2400000\nNA\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2019\nBY31\n18.23333\n58.58812\n4.9299932\n0.8466660\n1.7399985\n3.7933321\n1.0899990\n0.2866668\nNA\nNA\n0.3999990\nNA\n\n\nFeb\n2019\nBY15\n20.05000\n57.33333\n29.6599990\n24.3200150\n14.4266760\n34.0533090\n0.1599999\nNA\n0.0199999\nNA\nNA\nNA\n\n\nFeb\n2019\nBY5\n15.98333\n55.25000\n7.9866830\n6.6533407\n4.3573344\n25.1732890\n0.3920010\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2020\nBY5\n15.98333\n55.25000\n17.5700062\n11.0200060\n2.9599981\n20.4599863\n0.0800001\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2021\nBY31\n18.23333\n58.58812\n3.1666738\n1.8000002\n1.2466660\n0.9133316\nNA\nNA\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2021\nBY5\n15.98333\n55.25000\n3.2200064\n4.9919910\n6.2186631\n1.6240000\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\n2.7687899\n1.2843136\n24.2298540\n0.3251634\n0.6813720\n0.0326798\n0.1250002\nNA\nNA\nNA\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\n5.0522894\n1.2222226\n1.6307192\n0.6274512\n0.9215700\nNA\n0.0588236\nNA\nNA\nNA\n\n\nMar\n2009\nBY15\n20.05000\n57.33333\n1.9052292\n7.9084956\n4.3856250\n4.2810415\n0.0980391\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2009\nBY31\n18.23333\n58.58812\n1.9542489\n0.9869278\n1.3748356\n2.9019625\n0.7156856\nNA\n0.0049020\nNA\nNA\nNA\n\n\nMar\n2010\nBY31\n18.23333\n58.58812\n0.6200976\n0.1535947\n1.1405225\n0.6895424\n1.8676485\n0.4232027\n0.0098039\n0.0980392\nNA\nNA\n\n\nMar\n2010\nBY15\n20.05000\n57.33333\n7.5849613\n5.4836513\n6.2875840\n7.7516296\n0.4509810\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2010\nBY5\n15.98333\n55.25000\n9.3267986\n8.6535905\n28.9803758\n29.3072090\n0.9019620\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2011\nBY15\n20.05000\n57.33333\n4.7058740\n0.3856208\n9.8954260\n10.5882345\n0.0784314\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2011\nBY31\n18.23333\n58.58812\n2.0648139\n0.6612207\n2.7982574\n7.8278868\n0.1568628\n0.1470589\n0.0049020\nNA\nNA\nNA\n\n\nMar\n2011\nBY5\n15.98333\n55.25000\n3.9477198\n2.9673201\n22.4379240\n34.2091410\n0.1960785\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2012\nBY31\n18.23333\n58.58812\n2.8496749\n1.7647074\n2.4759803\n9.8889044\n0.4705887\n0.3267975\n0.0588236\nNA\n1.1764710\nNA\n\n\nMar\n2012\nBY15\n20.05000\n57.33333\n3.6078430\n8.7451029\n19.9591558\n11.7908398\n0.0980391\nNA\n0.0392157\nNA\nNA\nNA\n\n\nMar\n2013\nBY31\n18.23333\n58.58812\n0.5269612\n0.4836603\n2.7640528\n3.8643802\n0.6764707\n0.3267975\n0.0049020\nNA\n0.2450980\nNA\n\n\nMar\n2014\nBY15\n20.05000\n57.33333\n1.0245099\n1.5947718\n8.3039235\n12.7271252\n0.1666666\nNA\n0.0098039\nNA\n0.0980391\nNA\n\n\nMar\n2014\nBY31\n18.23333\n58.58812\n0.2555552\n0.2716776\n4.1969495\n4.2080611\n0.1888886\n0.0130719\n0.0294118\nNA\n0.2843142\nNA\n\n\nMar\n2014\nBY5\n15.98333\n55.25000\n2.5000029\n13.7941188\n5.3790814\n32.3954132\n0.2058824\nNA\n0.0196078\nNA\n0.1960785\n0.3267975\n\n\nMar\n2015\nBY31\n18.23333\n58.58812\n4.7886698\n0.0784314\n1.0745102\n0.2843138\n2.4771260\n0.1633987\nNA\nNA\n0.3921570\nNA\n\n\nMar\n2015\nBY15\n20.05000\n57.33333\n1.3449998\n0.2499998\n0.1933332\n0.6233324\n0.1700001\nNA\n0.0199999\nNA\nNA\nNA\n\n\nMar\n2015\nBY5\n15.98333\n55.25000\n5.0466670\n7.0599983\n1.0386675\n1.8600002\n0.2199999\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2016\nBY15\n20.05000\n57.33333\n2.4599989\n2.4933322\n0.7453331\n0.5800002\n0.2600001\nNA\nNA\n0.1000000\nNA\nNA\n\n\nMar\n2016\nBY31\n18.23333\n58.58812\n4.4300012\n1.1866654\n1.6433326\nNA\n2.5800045\nNA\n0.0600000\nNA\n0.3999990\nNA\n\n\nMar\n2016\nBY5\n15.98333\n55.25000\n13.1333487\n1.9999980\n8.0200010\n3.0000006\n4.4000100\nNA\n0.1000001\nNA\n2.0000010\nNA\n\n\nMar\n2017\nBY31\n18.23333\n58.58812\n4.8241643\n0.8466666\n0.2817777\n0.8250008\n2.2850000\n0.2616661\nNA\nNA\nNA\nNA\n\n\nMar\n2017\nBY5\n15.98333\n55.25000\n11.9399985\n22.6000000\n1.5959985\n21.9333144\n0.1599999\nNA\n0.0600000\nNA\nNA\nNA\n\n\nMar\n2018\nBY31\n18.23333\n58.58812\n3.1705547\n0.6822225\n5.1666653\n0.2488889\n0.2033333\n0.1666667\n0.0200000\n0.0166667\n0.2000001\nNA\n\n\nMar\n2019\nBY15\n20.05000\n57.33333\n8.9633263\n3.7933328\n1.7883345\n1.9333315\n0.4200000\nNA\n0.0520000\nNA\nNA\nNA\n\n\nMar\n2019\nBY31\n18.23333\n58.58812\n6.4866660\n6.5333315\n0.6091666\n0.7333315\n3.8800050\n0.1199997\n0.0400000\nNA\nNA\nNA\n\n\nMar\n2019\nBY5\n15.98333\n55.25000\n10.4333242\n7.1866648\n6.2199980\n20.9466656\n0.2000001\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2020\nBY31\n18.23333\n58.58812\n9.8883230\n1.0766679\n0.5113333\n1.6000020\n0.6699990\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2021\nBY31\n18.23333\n58.58812\n2.8541665\n0.6566668\n1.9481681\n0.4000002\n1.0184992\n0.3055556\nNA\nNA\nNA\n0.1666667\n\n\nMar\n2021\nBY5\n15.98333\n55.25000\n15.8999961\n2.6666700\n10.7633350\n1.8400023\n0.4280010\nNA\nNA\nNA\nNA\nNA\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\n44.2875954\n1.1895429\n0.7215689\n0.3834424\n7.3970565\n0.8839872\nNA\nNA\n0.2941177\nNA\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\n32.0294032\n0.3006532\n0.3686275\n0.6372550\n4.3333335\n0.1470588\n0.0784314\nNA\nNA\nNA\n\n\nApr\n2009\nBY31\n18.23333\n58.58812\n23.4706100\n0.6797388\n1.6448812\n0.5228760\n36.1372875\n0.2309369\nNA\nNA\nNA\nNA\n\n\nApr\n2010\nBY31\n18.23333\n58.58812\n9.1127571\n0.5816995\n0.9721677\n0.3921570\n42.3676425\n0.7990199\n0.2549025\nNA\n0.1633987\nNA\n\n\nApr\n2010\nBY5\n15.98333\n55.25000\n5.6013096\n5.9477145\n4.1764710\n12.0261350\n0.6274500\nNA\nNA\nNA\n0.3921570\nNA\n\n\nApr\n2010\nBY15\n20.05000\n57.33333\n7.8954205\n13.2287578\n8.0522840\n9.1503190\n0.1568628\nNA\nNA\nNA\nNA\nNA\n\n\nApr\n2011\nBY5\n15.98333\n55.25000\n2.6797349\n4.3137267\n24.1830170\n24.9607910\n0.0980391\nNA\n0.0196078\n0.1830066\n0.3267975\nNA\n\n\nApr\n2011\nBY31\n18.23333\n58.58812\n3.8758162\n0.2434641\n3.4108927\n0.5947710\n3.5326853\n0.0816993\nNA\nNA\nNA\n0.0816992\n\n\nApr\n2011\nBY15\n20.05000\n57.33333\n6.7320340\n1.5686280\n3.3294140\n9.9346420\n0.0588234\nNA\nNA\nNA\nNA\nNA\n\n\nApr\n2012\nBY31\n18.23333\n58.58812\n13.3823402\n0.6045754\n1.8947700\n0.6535950\n2.7598020\n0.1225490\nNA\n0.1830066\n1.8300660\n0.6535950\n\n\nApr\n2013\nBY31\n18.23333\n58.58812\n6.1830093\n1.3774514\n4.8307191\n7.4444382\n6.6127436\n0.0653595\n0.0980392\n0.0980392\n0.3921570\nNA\n\n\nApr\n2013\nBY5\n15.98333\n55.25000\n1.1633991\n1.6339875\n39.9215782\n6.1437930\n0.3137250\nNA\nNA\nNA\n0.7843140\nNA\n\n\nApr\n2013\nBY15\n20.05000\n57.33333\n2.9433581\n2.4967329\n5.3477124\n4.7494570\n0.1568628\nNA\n0.0130719\nNA\nNA\nNA\n\n\nApr\n2014\nBY31\n18.23333\n58.58812\n15.9019748\n1.3267978\n1.9455892\n0.8518521\n9.0490252\nNA\n0.2499997\n0.7450983\n6.6666600\nNA\n\n\nApr\n2014\nBY5\n15.98333\n55.25000\n14.5098045\n4.8366030\n35.2679510\n15.4901710\n10.9803900\nNA\nNA\n0.1633988\n1.9607850\n9.4771150\n\n\nApr\n2014\nBY15\n20.05000\n57.33333\n6.9673280\n8.1437937\n8.9313850\n1.9346412\n0.2352942\nNA\nNA\nNA\n0.7843140\nNA\n\n\nApr\n2015\nBY31\n18.23333\n58.58812\n74.7059408\n1.3071900\n0.5408492\n1.8758168\n11.8529400\n1.1023969\nNA\n0.3921570\n2.3529420\n0.6535950\n\n\nApr\n2015\nBY5\n15.98333\n55.25000\n81.5999400\n5.1999930\n11.3600120\n8.8000050\n72.3999000\nNA\nNA\nNA\nNA\n6.6666750\n\n\nApr\n2016\nBY15\n20.05000\n57.33333\n15.8666515\n0.7999980\n2.9333300\n2.4000000\n6.3000000\nNA\nNA\nNA\n3.9999900\nNA\n\n\nApr\n2016\nBY31\n18.23333\n58.58812\n33.9199920\nNA\n0.7155552\n2.1700004\n24.2700000\n0.3866669\n0.0400000\nNA\n2.4999982\nNA\n\n\nApr\n2016\nBY5\n15.98333\n55.25000\n102.9333250\n41.2000050\n2.6800000\n72.9333650\n86.0001000\nNA\nNA\nNA\n12.0000000\nNA\n\n\nApr\n2017\nBY31\n18.23333\n58.58812\n25.6666490\n1.2799968\n0.4449998\nNA\n12.1600050\n0.6999992\nNA\nNA\n0.8000010\nNA\n\n\nApr\n2017\nBY15\n20.05000\n57.33333\n18.4266655\n3.4666630\n4.8666625\nNA\n7.9200000\nNA\n0.0800000\nNA\nNA\nNA\n\n\nApr\n2017\nBY5\n15.98333\n55.25000\n19.7333195\n16.0666685\n0.8533360\n20.0666635\n32.1999000\nNA\nNA\nNA\nNA\nNA\n\n\nApr\n2018\nBY31\n18.23333\n58.58812\n18.5755497\n1.0666680\n1.9422231\nNA\n9.7999930\nNA\n0.0800000\n0.4500000\n0.8000010\nNA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nzooplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  tidyr::unite(col = \"Group_Taxa\", c(Group, Taxa)) |&gt; \n  tidyr::pivot_wider(names_from = Group_Taxa, values_from = Biomass)"
  },
  {
    "objectID": "tutorial/Part2 /index.html#manipulate-the-data-with-dplyr",
    "href": "tutorial/Part2 /index.html#manipulate-the-data-with-dplyr",
    "title": "TutoRial - Part 2",
    "section": "Manipulate the data with dplyr",
    "text": "Manipulate the data with dplyr\nOnce the data are tidy, we can start using the dplyr package to process our data. The main advantage of this package is that the functions are self-explanatory by their names and simple to use.\n\nExercises\n\nLoad the dataset phytoplankton in your environment\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nCoordinates\nTaxa\nBiomass\n\n\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n1.4170670\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nDiatoms\n1.7625112\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nDiatoms\n0.1557741\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nDiatoms\n1.6393078\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n0.6395350\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n0.0588896\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n0.0915522\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nMesodinium\n0.4351159\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nMesodinium\n0.0747435\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nMesodinium\n1.4315310\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nOther\n1.3033312\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nOther\n0.2156630\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nOther\n1.1125434\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n0.0383238\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n0.0045549\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nDiatoms\n0.2685554\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nDiatoms\n0.4660469\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n0.5857735\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n2.7702498\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nMesodinium\n2.3027740\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nMesodinium\n4.6692790\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nOther\n2.5899855\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nOther\n1.0055273\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n0.0332965\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n0.7736520\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nDiatoms\n1.8827332\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nDiatoms\n19.7081666\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nDiatoms\n0.4082621\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n0.9278628\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n3.6800348\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n3.3149470\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nMesodinium\n5.6033645\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nMesodinium\n5.0108820\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nMesodinium\n7.1609390\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nOther\n3.0645188\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nOther\n1.6856426\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nOther\n2.9057876\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n0.9965123\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n1.5807710\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nCyanobacteria\n0.0410806\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nDiatoms\n0.0045963\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nDiatoms\n24.1518964\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n156.7101643\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n71.8011718\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n67.6874160\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nMesodinium\n15.7203510\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nMesodinium\n12.4941918\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nMesodinium\n36.8173030\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nOther\n3.8423489\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nOther\n8.1863325\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nOther\n11.7197925\n\n\nMay\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n19.2116626\n\n\nMay\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n1.6178790\n\n\nMay\n2007\nBY5\n15.98333/55.25000\nCyanobacteria\n0.5313526\n\n\nMay\n2007\nBY31\n18.23333/58.58812\nDiatoms\n0.0042549\n\n\nMay\n2007\nBY5\n15.98333/55.25000\nDiatoms\n0.0244932\n\n\nMay\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n21.5156689\n\n\nMay\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n13.6779035\n\n\nMay\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n8.1028180\n\n\nMay\n2007\nBY15\n20.05000/57.33333\nMesodinium\n16.0948950\n\n\nMay\n2007\nBY31\n18.23333/58.58812\nMesodinium\n6.6110215\n\n\nMay\n2007\nBY5\n15.98333/55.25000\nMesodinium\n0.8812430\n\n\nMay\n2007\nBY15\n20.05000/57.33333\nOther\n24.8237576\n\n\nMay\n2007\nBY31\n18.23333/58.58812\nOther\n15.6735777\n\n\nMay\n2007\nBY5\n15.98333/55.25000\nOther\n1.2129954\n\n\nJun\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n28.2405294\n\n\nJun\n2007\nBY5\n15.98333/55.25000\nCyanobacteria\n3.4579093\n\n\nJun\n2007\nBY31\n18.23333/58.58812\nDiatoms\n2.3066194\n\n\nJun\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n12.9774832\n\n\nJun\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n22.2813630\n\n\nJun\n2007\nBY31\n18.23333/58.58812\nMesodinium\n12.3678540\n\n\nJun\n2007\nBY5\n15.98333/55.25000\nMesodinium\n0.8190821\n\n\nJun\n2007\nBY31\n18.23333/58.58812\nOther\n20.7497935\n\n\nJun\n2007\nBY5\n15.98333/55.25000\nOther\n24.1558857\n\n\nJul\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n30.4673044\n\n\nJul\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n34.8116610\n\n\nJul\n2007\nBY5\n15.98333/55.25000\nCyanobacteria\n29.4315242\n\n\nJul\n2007\nBY15\n20.05000/57.33333\nDiatoms\n0.0918368\n\n\nJul\n2007\nBY31\n18.23333/58.58812\nDiatoms\n0.3928731\n\n\nJul\n2007\nBY5\n15.98333/55.25000\nDiatoms\n0.0734306\n\n\nJul\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n10.3977993\n\n\nJul\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n3.3474611\n\n\nJul\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n1.5132594\n\n\nJul\n2007\nBY15\n20.05000/57.33333\nMesodinium\n21.4303200\n\n\nJul\n2007\nBY31\n18.23333/58.58812\nMesodinium\n3.4848500\n\n\nJul\n2007\nBY5\n15.98333/55.25000\nMesodinium\n1.8468610\n\n\nJul\n2007\nBY15\n20.05000/57.33333\nOther\n25.6596829\n\n\nJul\n2007\nBY31\n18.23333/58.58812\nOther\n14.8296841\n\n\nJul\n2007\nBY5\n15.98333/55.25000\nOther\n16.4801481\n\n\nAug\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n35.1015648\n\n\nAug\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n29.3835911\n\n\nAug\n2007\nBY5\n15.98333/55.25000\nCyanobacteria\n7.6262605\n\n\nAug\n2007\nBY15\n20.05000/57.33333\nDiatoms\n4.3946613\n\n\nAug\n2007\nBY31\n18.23333/58.58812\nDiatoms\n4.1095030\n\n\nAug\n2007\nBY5\n15.98333/55.25000\nDiatoms\n47.4181301\n\n\nAug\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n10.0954268\n\n\nAug\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n1.5648869\n\n\nAug\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n4.8352747\n\n\nAug\n2007\nBY15\n20.05000/57.33333\nMesodinium\n23.3937085\n\n\nAug\n2007\nBY31\n18.23333/58.58812\nMesodinium\n4.1931292\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndata(phytoplankton)\n\n\n\n\n\nAs with the zooplankton dataset, separate Coordinates as Longitude and Latitude\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nTaxa\nBiomass\n\n\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n1.4170670\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n1.7625112\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n0.1557741\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n1.6393078\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.6395350\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n0.0588896\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n0.0915522\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n0.4351159\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n0.0747435\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n1.4315310\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nOther\n1.3033312\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nOther\n0.2156630\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nOther\n1.1125434\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.0383238\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n0.0045549\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n0.2685554\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n0.4660469\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.5857735\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n2.7702498\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n2.3027740\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n4.6692790\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nOther\n2.5899855\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nOther\n1.0055273\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.0332965\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n0.7736520\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n1.8827332\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n19.7081666\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n0.4082621\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.9278628\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n3.6800348\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n3.3149470\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n5.6033645\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n5.0108820\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n7.1609390\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nOther\n3.0645188\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nOther\n1.6856426\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nOther\n2.9057876\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.9965123\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n1.5807710\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nCyanobacteria\n0.0410806\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n0.0045963\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n24.1518964\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n156.7101643\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n71.8011718\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n67.6874160\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n15.7203510\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n12.4941918\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n36.8173030\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nOther\n3.8423489\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nOther\n8.1863325\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nOther\n11.7197925\n\n\nMay\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n19.2116626\n\n\nMay\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n1.6178790\n\n\nMay\n2007\nBY5\n15.98333\n55.25000\nCyanobacteria\n0.5313526\n\n\nMay\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n0.0042549\n\n\nMay\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n0.0244932\n\n\nMay\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n21.5156689\n\n\nMay\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n13.6779035\n\n\nMay\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n8.1028180\n\n\nMay\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n16.0948950\n\n\nMay\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n6.6110215\n\n\nMay\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n0.8812430\n\n\nMay\n2007\nBY15\n20.05000\n57.33333\nOther\n24.8237576\n\n\nMay\n2007\nBY31\n18.23333\n58.58812\nOther\n15.6735777\n\n\nMay\n2007\nBY5\n15.98333\n55.25000\nOther\n1.2129954\n\n\nJun\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n28.2405294\n\n\nJun\n2007\nBY5\n15.98333\n55.25000\nCyanobacteria\n3.4579093\n\n\nJun\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n2.3066194\n\n\nJun\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n12.9774832\n\n\nJun\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n22.2813630\n\n\nJun\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n12.3678540\n\n\nJun\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n0.8190821\n\n\nJun\n2007\nBY31\n18.23333\n58.58812\nOther\n20.7497935\n\n\nJun\n2007\nBY5\n15.98333\n55.25000\nOther\n24.1558857\n\n\nJul\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n30.4673044\n\n\nJul\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n34.8116610\n\n\nJul\n2007\nBY5\n15.98333\n55.25000\nCyanobacteria\n29.4315242\n\n\nJul\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n0.0918368\n\n\nJul\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n0.3928731\n\n\nJul\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n0.0734306\n\n\nJul\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n10.3977993\n\n\nJul\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n3.3474611\n\n\nJul\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n1.5132594\n\n\nJul\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n21.4303200\n\n\nJul\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n3.4848500\n\n\nJul\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n1.8468610\n\n\nJul\n2007\nBY15\n20.05000\n57.33333\nOther\n25.6596829\n\n\nJul\n2007\nBY31\n18.23333\n58.58812\nOther\n14.8296841\n\n\nJul\n2007\nBY5\n15.98333\n55.25000\nOther\n16.4801481\n\n\nAug\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n35.1015648\n\n\nAug\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n29.3835911\n\n\nAug\n2007\nBY5\n15.98333\n55.25000\nCyanobacteria\n7.6262605\n\n\nAug\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n4.3946613\n\n\nAug\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n4.1095030\n\n\nAug\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n47.4181301\n\n\nAug\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n10.0954268\n\n\nAug\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n1.5648869\n\n\nAug\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n4.8352747\n\n\nAug\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n23.3937085\n\n\nAug\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n4.1931292\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") \n\n\n\n\n\nWhat is the class of the Longitude and Latitude columns?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThey are characters.\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  str()\n#&gt; tibble [2,284 × 7] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ Month_abb: chr [1:2284] \"Jan\" \"Jan\" \"Jan\" \"Jan\" ...\n#&gt;  $ Year     : chr [1:2284] \"2007\" \"2007\" \"2007\" \"2007\" ...\n#&gt;  $ Station  : chr [1:2284] \"BY15\" \"BY15\" \"BY31\" \"BY5\" ...\n#&gt;  $ Longitude: chr [1:2284] \"20.05000\" \"20.05000\" \"18.23333\" \"15.98333\" ...\n#&gt;  $ Latitude : chr [1:2284] \"57.33333\" \"57.33333\" \"58.58812\" \"55.25000\" ...\n#&gt;  $ Taxa     : chr [1:2284] \"Cyanobacteria\" \"Diatoms\" \"Diatoms\" \"Diatoms\" ...\n#&gt;  $ Biomass  : num [1:2284] 1.417 1.763 0.156 1.639 0.64 ...\n\n\n\n\n\nIf they are not numeric, modify them as numeric\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?as.numeric\n?mutate\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude))\n\n\n\n\n\nKeep only the data from year between 2008 and 2010\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nexample(\"%in%\")\n?filter\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010)\n\n\n\n\n\nKeep only the data with biomass higher or equal to 0.5 \\ \\mu g L^{-1}\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5)\n\n\n\n\n\nRename Month_abb as Month\n\n\n\n\n\n\n\nMonth\nYear\nStation\nLongitude\nLatitude\nTaxa\nBiomass\n\n\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.7330137\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n1.6245314\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n3.0818455\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.6737093\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n0.8869308\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n0.5885970\n\n\nJan\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n0.6849050\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n2.0836469\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nOther\n7.3249900\n\n\nJan\n2008\nBY31\n18.23333\n58.58812\nOther\n3.1265832\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nOther\n3.3561542\n\n\nFeb\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n1.2680965\n\n\nFeb\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n2.8023814\n\n\nFeb\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n1.1329852\n\n\nFeb\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n20.0837900\n\n\nFeb\n2008\nBY15\n20.05000\n57.33333\nOther\n16.9987771\n\n\nFeb\n2008\nBY31\n18.23333\n58.58812\nOther\n8.6802596\n\n\nFeb\n2008\nBY5\n15.98333\n55.25000\nOther\n16.0946263\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n1.6448488\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n30.4619174\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n4.6464811\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n13.6085017\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n5.7408130\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n1.1267941\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n7.3048790\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n7.6901795\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n14.4894850\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nOther\n200.9616193\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nOther\n9.3419906\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nOther\n4.0108086\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n3.2442822\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n0.5975883\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n11.5565268\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n16.4387791\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n1.3419904\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n67.6764830\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n24.7080846\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n9.2278796\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n5.3117510\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n12.5595830\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n11.9859809\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nOther\n97.1777810\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nOther\n52.1543315\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nOther\n73.0003628\n\n\nMay\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n1.9917544\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n1.8096993\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n3.7689240\n\n\nMay\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n49.6794582\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n15.4334030\n\n\nMay\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n7.7954351\n\n\nMay\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n114.3907920\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n19.4635645\n\n\nMay\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n12.5074460\n\n\nMay\n2008\nBY15\n20.05000\n57.33333\nOther\n145.0854363\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nOther\n191.5001810\n\n\nMay\n2008\nBY5\n15.98333\n55.25000\nOther\n151.3959052\n\n\nJun\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n61.6305746\n\n\nJun\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n10.6698774\n\n\nJun\n2008\nBY5\n15.98333\n55.25000\nCyanobacteria\n17.8390086\n\n\nJun\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n37.2215639\n\n\nJun\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n3.8613080\n\n\nJun\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n99.0591677\n\n\nJun\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n5.3590860\n\n\nJun\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n7.8686340\n\n\nJun\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n2.4165599\n\n\nJun\n2008\nBY15\n20.05000\n57.33333\nOther\n131.0546297\n\n\nJun\n2008\nBY31\n18.23333\n58.58812\nOther\n31.6892132\n\n\nJun\n2008\nBY5\n15.98333\n55.25000\nOther\n57.9077101\n\n\nJul\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n77.3270097\n\n\nJul\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n24.4865029\n\n\nJul\n2008\nBY5\n15.98333\n55.25000\nCyanobacteria\n146.7956724\n\n\nJul\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n1.4067665\n\n\nJul\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n3.1259438\n\n\nJul\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n8.7162830\n\n\nJul\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n2.1161625\n\n\nJul\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n7.5016140\n\n\nJul\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n16.8973310\n\n\nJul\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n3.6178367\n\n\nJul\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n18.6556700\n\n\nJul\n2008\nBY15\n20.05000\n57.33333\nOther\n23.2196779\n\n\nJul\n2008\nBY31\n18.23333\n58.58812\nOther\n12.9500906\n\n\nJul\n2008\nBY5\n15.98333\n55.25000\nOther\n16.9645180\n\n\nAug\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n1.6289310\n\n\nAug\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n9.8550895\n\n\nAug\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n2.3028250\n\n\nAug\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n1.4445256\n\n\nAug\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n4.5655931\n\n\nAug\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n3.0243774\n\n\nAug\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n23.1854881\n\n\nAug\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n19.1602260\n\n\nAug\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n2.2393555\n\n\nAug\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n24.8840410\n\n\nAug\n2008\nBY15\n20.05000\n57.33333\nOther\n17.0706865\n\n\nAug\n2008\nBY31\n18.23333\n58.58812\nOther\n31.6267606\n\n\nAug\n2008\nBY5\n15.98333\n55.25000\nOther\n26.8495361\n\n\nSep\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n6.4188515\n\n\nSep\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n0.9041421\n\n\nSep\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n1.1753823\n\n\nSep\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n1.7686101\n\n\nSep\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n1.3203980\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5) |&gt; \n  dplyr::rename(Month = Month_abb)\n\n\n\n\n\nKeep all the column except Longitude\n\n\n\n\n\n\n\nMonth\nYear\nStation\nLatitude\nTaxa\nBiomass\n\n\n\n\nJan\n2008\nBY15\n57.33333\nCyanobacteria\n0.7330137\n\n\nJan\n2008\nBY15\n57.33333\nDiatoms\n1.6245314\n\n\nJan\n2008\nBY5\n55.25000\nDiatoms\n3.0818455\n\n\nJan\n2008\nBY15\n57.33333\nDinoflagellates\n0.6737093\n\n\nJan\n2008\nBY5\n55.25000\nDinoflagellates\n0.8869308\n\n\nJan\n2008\nBY15\n57.33333\nMesodinium\n0.5885970\n\n\nJan\n2008\nBY31\n58.58812\nMesodinium\n0.6849050\n\n\nJan\n2008\nBY5\n55.25000\nMesodinium\n2.0836469\n\n\nJan\n2008\nBY15\n57.33333\nOther\n7.3249900\n\n\nJan\n2008\nBY31\n58.58812\nOther\n3.1265832\n\n\nJan\n2008\nBY5\n55.25000\nOther\n3.3561542\n\n\nFeb\n2008\nBY15\n57.33333\nDiatoms\n1.2680965\n\n\nFeb\n2008\nBY5\n55.25000\nDiatoms\n2.8023814\n\n\nFeb\n2008\nBY15\n57.33333\nDinoflagellates\n1.1329852\n\n\nFeb\n2008\nBY5\n55.25000\nMesodinium\n20.0837900\n\n\nFeb\n2008\nBY15\n57.33333\nOther\n16.9987771\n\n\nFeb\n2008\nBY31\n58.58812\nOther\n8.6802596\n\n\nFeb\n2008\nBY5\n55.25000\nOther\n16.0946263\n\n\nMar\n2008\nBY15\n57.33333\nDiatoms\n1.6448488\n\n\nMar\n2008\nBY31\n58.58812\nDiatoms\n30.4619174\n\n\nMar\n2008\nBY5\n55.25000\nDiatoms\n4.6464811\n\n\nMar\n2008\nBY15\n57.33333\nDinoflagellates\n13.6085017\n\n\nMar\n2008\nBY31\n58.58812\nDinoflagellates\n5.7408130\n\n\nMar\n2008\nBY5\n55.25000\nDinoflagellates\n1.1267941\n\n\nMar\n2008\nBY15\n57.33333\nMesodinium\n7.3048790\n\n\nMar\n2008\nBY31\n58.58812\nMesodinium\n7.6901795\n\n\nMar\n2008\nBY5\n55.25000\nMesodinium\n14.4894850\n\n\nMar\n2008\nBY15\n57.33333\nOther\n200.9616193\n\n\nMar\n2008\nBY31\n58.58812\nOther\n9.3419906\n\n\nMar\n2008\nBY5\n55.25000\nOther\n4.0108086\n\n\nApr\n2008\nBY15\n57.33333\nCyanobacteria\n3.2442822\n\n\nApr\n2008\nBY31\n58.58812\nCyanobacteria\n0.5975883\n\n\nApr\n2008\nBY15\n57.33333\nDiatoms\n11.5565268\n\n\nApr\n2008\nBY31\n58.58812\nDiatoms\n16.4387791\n\n\nApr\n2008\nBY5\n55.25000\nDiatoms\n1.3419904\n\n\nApr\n2008\nBY15\n57.33333\nDinoflagellates\n67.6764830\n\n\nApr\n2008\nBY31\n58.58812\nDinoflagellates\n24.7080846\n\n\nApr\n2008\nBY5\n55.25000\nDinoflagellates\n9.2278796\n\n\nApr\n2008\nBY15\n57.33333\nMesodinium\n5.3117510\n\n\nApr\n2008\nBY31\n58.58812\nMesodinium\n12.5595830\n\n\nApr\n2008\nBY5\n55.25000\nMesodinium\n11.9859809\n\n\nApr\n2008\nBY15\n57.33333\nOther\n97.1777810\n\n\nApr\n2008\nBY31\n58.58812\nOther\n52.1543315\n\n\nApr\n2008\nBY5\n55.25000\nOther\n73.0003628\n\n\nMay\n2008\nBY15\n57.33333\nCyanobacteria\n1.9917544\n\n\nMay\n2008\nBY31\n58.58812\nCyanobacteria\n1.8096993\n\n\nMay\n2008\nBY31\n58.58812\nDiatoms\n3.7689240\n\n\nMay\n2008\nBY15\n57.33333\nDinoflagellates\n49.6794582\n\n\nMay\n2008\nBY31\n58.58812\nDinoflagellates\n15.4334030\n\n\nMay\n2008\nBY5\n55.25000\nDinoflagellates\n7.7954351\n\n\nMay\n2008\nBY15\n57.33333\nMesodinium\n114.3907920\n\n\nMay\n2008\nBY31\n58.58812\nMesodinium\n19.4635645\n\n\nMay\n2008\nBY5\n55.25000\nMesodinium\n12.5074460\n\n\nMay\n2008\nBY15\n57.33333\nOther\n145.0854363\n\n\nMay\n2008\nBY31\n58.58812\nOther\n191.5001810\n\n\nMay\n2008\nBY5\n55.25000\nOther\n151.3959052\n\n\nJun\n2008\nBY15\n57.33333\nCyanobacteria\n61.6305746\n\n\nJun\n2008\nBY31\n58.58812\nCyanobacteria\n10.6698774\n\n\nJun\n2008\nBY5\n55.25000\nCyanobacteria\n17.8390086\n\n\nJun\n2008\nBY15\n57.33333\nDinoflagellates\n37.2215639\n\n\nJun\n2008\nBY31\n58.58812\nDinoflagellates\n3.8613080\n\n\nJun\n2008\nBY5\n55.25000\nDinoflagellates\n99.0591677\n\n\nJun\n2008\nBY15\n57.33333\nMesodinium\n5.3590860\n\n\nJun\n2008\nBY31\n58.58812\nMesodinium\n7.8686340\n\n\nJun\n2008\nBY5\n55.25000\nMesodinium\n2.4165599\n\n\nJun\n2008\nBY15\n57.33333\nOther\n131.0546297\n\n\nJun\n2008\nBY31\n58.58812\nOther\n31.6892132\n\n\nJun\n2008\nBY5\n55.25000\nOther\n57.9077101\n\n\nJul\n2008\nBY15\n57.33333\nCyanobacteria\n77.3270097\n\n\nJul\n2008\nBY31\n58.58812\nCyanobacteria\n24.4865029\n\n\nJul\n2008\nBY5\n55.25000\nCyanobacteria\n146.7956724\n\n\nJul\n2008\nBY31\n58.58812\nDiatoms\n1.4067665\n\n\nJul\n2008\nBY5\n55.25000\nDiatoms\n3.1259438\n\n\nJul\n2008\nBY15\n57.33333\nDinoflagellates\n8.7162830\n\n\nJul\n2008\nBY31\n58.58812\nDinoflagellates\n2.1161625\n\n\nJul\n2008\nBY5\n55.25000\nDinoflagellates\n7.5016140\n\n\nJul\n2008\nBY15\n57.33333\nMesodinium\n16.8973310\n\n\nJul\n2008\nBY31\n58.58812\nMesodinium\n3.6178367\n\n\nJul\n2008\nBY5\n55.25000\nMesodinium\n18.6556700\n\n\nJul\n2008\nBY15\n57.33333\nOther\n23.2196779\n\n\nJul\n2008\nBY31\n58.58812\nOther\n12.9500906\n\n\nJul\n2008\nBY5\n55.25000\nOther\n16.9645180\n\n\nAug\n2008\nBY15\n57.33333\nCyanobacteria\n1.6289310\n\n\nAug\n2008\nBY31\n58.58812\nCyanobacteria\n9.8550895\n\n\nAug\n2008\nBY15\n57.33333\nDiatoms\n2.3028250\n\n\nAug\n2008\nBY31\n58.58812\nDiatoms\n1.4445256\n\n\nAug\n2008\nBY5\n55.25000\nDiatoms\n4.5655931\n\n\nAug\n2008\nBY31\n58.58812\nDinoflagellates\n3.0243774\n\n\nAug\n2008\nBY5\n55.25000\nDinoflagellates\n23.1854881\n\n\nAug\n2008\nBY15\n57.33333\nMesodinium\n19.1602260\n\n\nAug\n2008\nBY31\n58.58812\nMesodinium\n2.2393555\n\n\nAug\n2008\nBY5\n55.25000\nMesodinium\n24.8840410\n\n\nAug\n2008\nBY15\n57.33333\nOther\n17.0706865\n\n\nAug\n2008\nBY31\n58.58812\nOther\n31.6267606\n\n\nAug\n2008\nBY5\n55.25000\nOther\n26.8495361\n\n\nSep\n2008\nBY31\n58.58812\nCyanobacteria\n6.4188515\n\n\nSep\n2008\nBY15\n57.33333\nDiatoms\n0.9041421\n\n\nSep\n2008\nBY5\n55.25000\nDiatoms\n1.1753823\n\n\nSep\n2008\nBY15\n57.33333\nDinoflagellates\n1.7686101\n\n\nSep\n2008\nBY31\n58.58812\nDinoflagellates\n1.3203980\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5) |&gt; \n  dplyr::rename(Month = Month_abb) |&gt; \n  dplyr::select(-Longitude)\n\n\n\n\n\nMake a summary table showing the Taxa average Monthly Biomass between Station\n\n\n\n\n\n\n\nStation\nMonth\nTaxa\nAverage_Biomass\n\n\n\n\nBY15\nApr\nCyanobacteria\n2.2431900\n\n\nBY15\nApr\nDiatoms\n23.1445282\n\n\nBY15\nApr\nDinoflagellates\n83.9909404\n\n\nBY15\nApr\nMesodinium\n29.6087615\n\n\nBY15\nApr\nOther\n36.7386392\n\n\nBY15\nAug\nCyanobacteria\n30.9818961\n\n\nBY15\nAug\nDiatoms\n2.2636098\n\n\nBY15\nAug\nDinoflagellates\n9.3918903\n\n\nBY15\nAug\nMesodinium\n9.9576955\n\n\nBY15\nAug\nOther\n9.6425753\n\n\nBY15\nFeb\nDiatoms\n1.3669538\n\n\nBY15\nFeb\nDinoflagellates\n0.8888890\n\n\nBY15\nFeb\nMesodinium\n3.0700606\n\n\nBY15\nFeb\nOther\n6.6884657\n\n\nBY15\nJan\nCyanobacteria\n0.7330137\n\n\nBY15\nJan\nDiatoms\n1.3262260\n\n\nBY15\nJan\nDinoflagellates\n0.7177460\n\n\nBY15\nJan\nMesodinium\n1.3992310\n\n\nBY15\nJan\nOther\n2.9148920\n\n\nBY15\nJul\nCyanobacteria\n53.9321258\n\n\nBY15\nJul\nDiatoms\n1.9936481\n\n\nBY15\nJul\nDinoflagellates\n16.1664696\n\n\nBY15\nJul\nMesodinium\n8.0555951\n\n\nBY15\nJul\nOther\n22.4351224\n\n\nBY15\nJun\nCyanobacteria\n26.5576427\n\n\nBY15\nJun\nDiatoms\n0.6320936\n\n\nBY15\nJun\nDinoflagellates\n27.3757633\n\n\nBY15\nJun\nMesodinium\n33.1540950\n\n\nBY15\nJun\nOther\n46.1942387\n\n\nBY15\nMar\nDiatoms\n1.4455245\n\n\nBY15\nMar\nDinoflagellates\n6.2031314\n\n\nBY15\nMar\nMesodinium\n6.5886593\n\n\nBY15\nMar\nOther\n68.6788097\n\n\nBY15\nMay\nCyanobacteria\n1.4308471\n\n\nBY15\nMay\nDinoflagellates\n59.9251837\n\n\nBY15\nMay\nMesodinium\n74.1766803\n\n\nBY15\nMay\nOther\n54.9198979\n\n\nBY15\nNov\nCyanobacteria\n1.1144862\n\n\nBY15\nNov\nDiatoms\n30.4754041\n\n\nBY15\nNov\nDinoflagellates\n1.0517013\n\n\nBY15\nNov\nMesodinium\n3.8012673\n\n\nBY15\nNov\nOther\n8.4426735\n\n\nBY15\nOct\nCyanobacteria\n4.9325064\n\n\nBY15\nOct\nDiatoms\n3.4127018\n\n\nBY15\nOct\nDinoflagellates\n3.9303931\n\n\nBY15\nOct\nMesodinium\n5.5022190\n\n\nBY15\nOct\nOther\n5.4928720\n\n\nBY15\nSep\nCyanobacteria\n1.9732444\n\n\nBY15\nSep\nDiatoms\n3.6823882\n\n\nBY15\nSep\nDinoflagellates\n5.8051506\n\n\nBY15\nSep\nMesodinium\n7.2643770\n\n\nBY15\nSep\nOther\n12.1616825\n\n\nBY31\nApr\nCyanobacteria\n0.5848153\n\n\nBY31\nApr\nDiatoms\n31.5199854\n\n\nBY31\nApr\nDinoflagellates\n47.3597964\n\n\nBY31\nApr\nMesodinium\n12.4142038\n\n\nBY31\nApr\nOther\n22.9395830\n\n\nBY31\nAug\nCyanobacteria\n27.4223843\n\n\nBY31\nAug\nDiatoms\n1.8688744\n\n\nBY31\nAug\nDinoflagellates\n3.8432598\n\n\nBY31\nAug\nMesodinium\n2.6239872\n\n\nBY31\nAug\nOther\n17.5063495\n\n\nBY31\nDec\nCyanobacteria\n0.9077315\n\n\nBY31\nDec\nDiatoms\n1.0934930\n\n\nBY31\nDec\nDinoflagellates\n1.6904967\n\n\nBY31\nDec\nMesodinium\n3.0335710\n\n\nBY31\nDec\nOther\n4.5088732\n\n\nBY31\nFeb\nCyanobacteria\n1.1484952\n\n\nBY31\nFeb\nDiatoms\n0.5202499\n\n\nBY31\nFeb\nMesodinium\n3.1257320\n\n\nBY31\nFeb\nOther\n3.4709652\n\n\nBY31\nJan\nDiatoms\n0.9094589\n\n\nBY31\nJan\nMesodinium\n1.4748977\n\n\nBY31\nJan\nOther\n1.5591711\n\n\nBY31\nJul\nCyanobacteria\n35.2428968\n\n\nBY31\nJul\nDiatoms\n1.4067665\n\n\nBY31\nJul\nDinoflagellates\n8.3609824\n\n\nBY31\nJul\nMesodinium\n6.7770139\n\n\nBY31\nJul\nOther\n13.9956803\n\n\nBY31\nJun\nCyanobacteria\n11.0191105\n\n\nBY31\nJun\nDinoflagellates\n7.9994923\n\n\nBY31\nJun\nMesodinium\n9.3315928\n\n\nBY31\nJun\nOther\n19.1972400\n\n\nBY31\nMar\nCyanobacteria\n0.5348912\n\n\nBY31\nMar\nDiatoms\n18.9272220\n\n\nBY31\nMar\nDinoflagellates\n4.2993880\n\n\nBY31\nMar\nMesodinium\n4.9544850\n\n\nBY31\nMar\nOther\n4.2224464\n\n\nBY31\nMay\nCyanobacteria\n1.8655318\n\n\nBY31\nMay\nDiatoms\n2.1958123\n\n\nBY31\nMay\nDinoflagellates\n52.7546810\n\n\nBY31\nMay\nMesodinium\n21.2154883\n\n\nBY31\nMay\nOther\n71.5659342\n\n\nBY31\nNov\nCyanobacteria\n2.1867325\n\n\nBY31\nNov\nDiatoms\n2.2432961\n\n\nBY31\nNov\nDinoflagellates\n1.0955858\n\n\nBY31\nNov\nMesodinium\n4.0724452\n\n\nBY31\nNov\nOther\n9.0438077\n\n\nBY31\nOct\nCyanobacteria\n5.3681552\n\n\nBY31\nOct\nDiatoms\n0.6125432\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5) |&gt; \n  dplyr::rename(Month = Month_abb) |&gt; \n  dplyr::select(-Longitude) |&gt; \n  dplyr::group_by(Station, Month, Taxa) |&gt; \n  dplyr::summarise(Average_Biomass = mean(Biomass)) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\n\n\nTip\n\n\n\nOnce you have made your operation using group_by and summarise, you can pipe the function ungroup()"
  },
  {
    "objectID": "tutorial/Part2 /index.html#data-visualisation-with-ggplot2",
    "href": "tutorial/Part2 /index.html#data-visualisation-with-ggplot2",
    "title": "TutoRial - Part 2",
    "section": "Data visualisation with ggplot2",
    "text": "Data visualisation with ggplot2\nIn this part we will build a plot step by step using the grammar of graphic in ggplot2.\n\nExercises\n\nLoad the ggplot2 library and import the zooplankton dataset\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(ggplot2)\ndata(zooplankton)\n\n\n\n\n\nCreate a dataframe named df containing only Centropages biomass\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf &lt;- zooplankton |&gt; \n  dplyr::filter(Taxa == \"Centropages\")\n\n\n\n\n\nInitiate a ggplot using the data df and the Month_abb on the x-axis and the Biomass on the y-axis\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Month_abb,\n                     y = Biomass))\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\nThe month are ordered by alphabetical order, this can be changed using the code below\n\ndf_ordered &lt;- df |&gt; \n  dplyr::mutate(Month_abb = factor(Month_abb, levels = month.abb))\n\nAnd then run again the initiation but this time with the dataframe df_ordered\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass))\n\n\n\n\n\n\n\n\n\n\n\n\nAdd the biomass data as point\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point()\n\n\n\n\n\nSeparate the plot into 3 facets corresponding to the stations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point()+\n  facet_wrap(~Station)\n\n\n\n\n\nColor the points by Year\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point(mapping = aes(color = Year))+\n  facet_wrap(~Station)\n\n\n\n\n\nRotate by 90° the x-axis text, change the color, the size and the font face of strip text and add a background color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point(mapping = aes(color = Year)) +\n  facet_wrap(~Station) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90),\n        strip.text = element_text(color = \"firebrick\",\n                                  size = 12,\n                                  face = \"bold\"),\n        panel.background = element_rect(fill = \"forestgreen\"))\n\n\n\n\n\nChange the x-axis name to Month and add a title My plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np &lt;- ggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point(mapping = aes(color = Year)) +\n  facet_wrap(~Station) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90),\n        strip.text = element_text(color = \"firebrick\",\n                                  size = 12,\n                                  face = \"bold\"),\n        panel.background = element_rect(fill = \"forestgreen\")) +\n  labs(x = \"Month\",\n       title = \"My plot\")\np\n\n\n\n\n\nNow create a dataframe df_summarythat contain the mean and the standard error of Centropages monthly biomass by Station between 2007 and 2021\n\n\n#&gt; `summarise()` has grouped output by 'Month_abb'. You can override using the\n#&gt; `.groups` argument.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nHave a look at the function se from the PlanktonData package\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf_summary &lt;- df |&gt;\n  group_by(Month_abb, Station) |&gt; \n  summarise(Average = mean(Biomass),\n            SE = se(Biomass)) |&gt; \n  ungroup()\n\n\n\n\n\nAdd a geom_bar showing the average monthly biomass to the plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nWe can use another geom_* with another data using +\nSometime it is also important to add the parameter stat = \"identity\" in a geom_bar\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np +\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average),\n           stat = \"identity\")\n\n\n\n\n\nAdd a geom_errorbar showing the mean ± standard error\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np +\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average),\n           stat = \"identity\") +\n  geom_errorbar(data = df_summary,\n                mapping = aes(x = Month_abb,\n                              y = Average,\n                              ymin = Average - SE,\n                              ymax = Average + SE))\n\n\n\n\n\nChange the fill to of the bar to #EFF675 and width of the errorbar to 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np +\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average),\n           stat = \"identity\",\n           fill = \"#EFF675\") +\n  geom_errorbar(data = df_summary,\n                mapping = aes(x = Month_abb,\n                              y = Average,\n                              ymin = Average - SE,\n                              ymax = Average + SE),\n                width = 0)\n\n\n\n\n\nMake these changes from the initial plot:\n\nChange the points to a jitter plot that is in front of the bars\nChange the shape of the jitter to the shape 21\nChange the color of the bars to black and fill them as well as the jitter according to the Station\nRemove the panel background and change the color of the strip text to black\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe order matters. The first geom_* will be the first pasted on the plot.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nFirst we need to reorder the df_summary as we did with the df_ordered\n\ndf_summary &lt;- df_summary |&gt; \n  mutate(Month_abb = factor(Month_abb, levels = month.abb))\n\nAnd then we can plot\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  \n  # First start with the bars\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average,\n                         fill = Station),\n           stat = \"identity\",\n           alpha = 0.2, # &lt;------ this is the transparency argument\n           col = \"black\") + # &lt;------- this add the color around the bars \n  # Add the errorbar\n  geom_errorbar(data = df_summary,\n                mapping = aes(x = Month_abb,\n                              y = Average,\n                              ymin = Average - SE,\n                              ymax = Average + SE),\n                width = 0) +\n  # Replace geom_point with geom_jitter\n  geom_jitter(mapping = aes(fill = Station), # &lt;----- that is filled according to the station\n              shape = 21, # &lt;---- and from the shape 21\n              # With geom_jitter, we can chose how much jitter we want. I suggest to set only a jitter on the x-axis and not on the y-axis\n              width = .1,\n              height = 0) +\n  facet_wrap(~Station) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90),\n        strip.text = element_text(color = \"black\",\n                                  size = 12,\n                                  face = \"bold\"),\n        panel.background = element_rect(fill = \"transparent\"),\n        legend.position = \"none\") +\n  labs(x = \"Month\",\n       title = \"My plot\") +\n  # This is optional but you can chose the fill color like this\n  scale_fill_manual(values = c(\"#01665e\",\"#d8b365\", \"#762a83\"))"
  },
  {
    "objectID": "tutorial/Part2 /index.html#optional-exercises",
    "href": "tutorial/Part2 /index.html#optional-exercises",
    "title": "TutoRial - Part 2",
    "section": "Optional exercises",
    "text": "Optional exercises\n\nExercise 1Exercise 2Exercise 3\n\n\n\nExerciseStep by step solution\n\n\nCreate this plot using the data zooplankton and phytoplankton:\n\n\n\n\n\n\n\n\n\n\n\n\nCombine the datasets zooplankton and phytoplankton to create a dataset named plankton\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?rbind()\n\nThis functions requires the same number and name of columns!\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndata(\"zooplankton\") ; data(\"phytoplankton\")\n\nplankton &lt;-\n  phytoplankton |&gt; \n  dplyr::mutate(Group = \"Phytoplankton\") |&gt; # &lt;---- We need to add a Group column to rbind it\n  rbind(zooplankton)\n\n\n\n\n\nFrom the dataset plankton keep only the values of for Copepoda and Phytoplankton\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\"))\n\n\n\n\n\nAdd a Season column containing the seasons (Winter = Jan, Feb, Mar; Spring = Apr, May, Jun; Summer = July, Aug, Sep; Autumn= Oct, Nov, Dec)\nWe can also specify that this is a factor that has levels\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?case_when()\n?month.abb\n\nWe to select a value within a vector we can also use the []. For example:\n\nx &lt;- c(\"One\", \"Two\", \"Three\", \"Four\")\nx[1]\n#&gt; [1] \"One\"\nx[1:3]\n#&gt; [1] \"One\"   \"Two\"   \"Three\"\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\")) |&gt; \n  dplyr::mutate(Season = case_when(\n    Month_abb %in% month.abb[1:3] ~ \"Winter\",\n    Month_abb %in% month.abb[4:6] ~ \"Spring\",\n    Month_abb %in% month.abb[7:9] ~ \"Summer\",\n    Month_abb %in% month.abb[10:12] ~ \"Autumn\"),\n    Season = factor(Season, levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")))\n\n\n\n\n\nTake the Yearly Seasonal Biomass sum by Station for these 2 groups and transform the data by taking the log of this biomass\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\")) |&gt; \n  dplyr::mutate(Season = case_when(\n    Month_abb %in% month.abb[1:3] ~ \"Winter\",\n    Month_abb %in% month.abb[4:6] ~ \"Spring\",\n    Month_abb %in% month.abb[7:9] ~ \"Summer\",\n    Month_abb %in% month.abb[10:12] ~ \"Autumn\"),\n    Season = factor(Season, levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"))) |&gt; \n  dplyr::group_by(Season, Year, Station, Group) |&gt; \n  dplyr::summarise(Tot_Biomass_log = log(sum(Biomass))) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\nMake the data wide and save it as df (and remove all the row with NA values)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf &lt;- \n  plankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\")) |&gt; \n  dplyr::mutate(Season = case_when(\n    Month_abb %in% month.abb[1:3] ~ \"Winter\",\n    Month_abb %in% month.abb[4:6] ~ \"Spring\",\n    Month_abb %in% month.abb[7:9] ~ \"Summer\",\n    Month_abb %in% month.abb[10:12] ~ \"Autumn\"),\n    Season = factor(Season, levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"))) |&gt; \n  dplyr::group_by(Season, Year, Station, Group) |&gt; \n  dplyr::summarise(Tot_Biomass_log = log(sum(Biomass))) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Group, values_from = Tot_Biomass_log) |&gt; \n  tidyr::drop_na()\n\n\n\n\n\nStart to plot by using the geom_point\n\nThe shape is changing according to the Season\nThe fill is changing according to the Season\nThe size of the points are fixed to 3\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3)\n\n\n\n\n\nSpecify that the shape should be 21, 22, 23 and 24\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) \n  \n\n\n\n\n\nSplit the plot vertically based on the Season\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1)\n\n\n\n\n\nAdd the regression lines for each Station and Season without the standard error\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1) +\n  geom_smooth(mapping = aes(group = Season,\n                            col = Season),\n              se = FALSE,\n              method = \"lm\")\n\n\n\n\n\nModify the labels\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1) +\n  geom_smooth(mapping = aes(group = Season,\n                            col = Season),\n              se = FALSE,\n              method = \"lm\") +\n  labs(x = \"log(Phytoplankton Biomass)\",\n       y = \"log(Copepod Biomass)\",\n       title = \"Relationship between total phytoplankton and\\ntotal copepod biomass across stations and seasons\")\n\n\n\n\n\nModify the theme of the plot\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1) +\n  geom_smooth(mapping = aes(group = Season,\n                            col = Season),\n              se = FALSE,\n              method = \"lm\") +\n  labs(x = \"log(Phytoplankton Biomass)\",\n       y = \"log(Copepod Biomass)\",\n       title = \"Relationship between total phytoplankton and\\ntotal copepod biomass across stations and seasons\") +\n  theme_bw() +\n  theme(legend.position = \"bottom\",\n        strip.background = element_blank(),\n        strip.text = element_text(hjust = 1,\n                                  face = \"bold\"),\n        panel.grid = element_blank()) +\n  scale_color_manual(values = c(\"#ADA9B7\", \"#B9E28C\", \"#FFB84C\", \"#DFD3C3\")) +\n  scale_fill_manual(values = c(\"#ADA9B7\", \"#B9E28C\", \"#FFB84C\", \"#DFD3C3\"))\n\n\n\n\n\n\n\n\n\n\nExerciseStep by step solution\n\n\nCreate this plot using the two datasets\n\n\n\n\n\n\n\n\n\n\n\n\nStart with loading the phytoplankton dataset\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndata(\"phytoplankton\")\n\n\n\n\n\nFilter the Month Aug and Sep\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\"))\n\n\n\n\n\nInitiate a plot with the Month_abb on the x-axis, the Biomass on the y-axis and that is filled according to their Taxa\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt; \n    ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa))\n\n\n\n\n\n\n\nTip\n\n\n\nYou can pipe directly your dataset into ggplot. It will know that data = what_is_above\n\n\n\n\n\n\nAdd a geom_bar\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nLook what position we can apply to geom_bar\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt; \n    ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\")\n\n\n\n\n\nSeparate the plot in facets by Station\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt; \n    ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\") +\n  facet_wrap(~Station, ncol = 1) \n\n\n\n\n\nModify the labels, fill values, theme and the y-axis and save the plot as p1\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np1 &lt;-\n  phytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt;\n\n  ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\") +\n  facet_wrap(~Station, ncol = 1) +\n\n  scale_fill_manual(\"Phytoplankton\", # This change the title of the legend\n                    values = c(\"#F5A65B\", \"#8BBD8B\", \"#8B9474\", \"#B388EB\", \"#28587B\"))+\n  theme_void() +\n  theme(axis.text.x = element_text(color = \"black\"),\n        strip.text = element_text(color = \"black\", hjust = .1),\n        axis.title.y = element_text(color = \"black\", angle = 90)) +\n  labs(y = \"Relative biomass\")\n\n\n\n\n\nDo the same for the zooplankton\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np2 &lt;- \n  zooplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt;\n\n  ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\") +\n  facet_wrap(~Station, ncol = 1) +\n\n\n  scale_fill_manual(\"Zooplankton\",\n                    values = c(\"#816C61\", \"#E7DFC6\", \"#E7BBE3\", \"#7CC6FE\", \"#EE6C4D\", \"#B6C9BB\", \"#9684A1\", \"#BFEDC1\", \"#B19994\", \"black\")) +\n  theme_void() +\n  theme(axis.text = element_text(color =\"black\"),\n        strip.text = element_text(color = \"transparent\"))\n\n\n\n\n\nCombine the two plots together using the package patchwork\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(patchwork)\np1 + p2 +\n  plot_layout(guides = \"collect\") # This collect the legend together\n\n\n\n\n\n\n\n\n\n\nExerciseStep by step solution\n\n\nUsing phytoplanktoncreate this plot:\n\n\n\n\n\n\n\n\n\n\n\nThis is one solution, but several other exist !\n\nRename the taxa either Cyanobacteria or Other and transform Month_abb as a factor\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb))\n  \n\n\n\n\n\nCalculate the sum of Biomass by Month, Taxa, Station and Year\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\nPivot the table and remove the NA and calculate the proportion of Cyanobacteria\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Taxa, values_from = Tot_biomass) |&gt; \n  tidyr::drop_na() |&gt; \n  dplyr::mutate(Total = Cyanobacteria + Other,\n                Cyano_prop = (Cyanobacteria/Total) * 100) |&gt; \n  dplyr::select(Station, Month, Year, Cyano_prop) # This is not needed but it is easier to have a simpler table\n\n\n\n\n\nInitiate the plot using geom_tile and separate according to the Station\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Taxa, values_from = Tot_biomass) |&gt; \n  tidyr::drop_na() |&gt; \n  dplyr::mutate(Total = Cyanobacteria + Other,\n                Cyano_prop = (Cyanobacteria/Total) * 100) |&gt; \n  dplyr::select(Station, Month, Year, Cyano_prop) |&gt;  # This is not needed but it is easier to have a simpler table\n  ggplot(mapping = aes(x = Month,\n                       y = Year,\n                       fill = Cyano_prop)) +\n  geom_tile(col = \"black\") +\n  facet_grid(~Station)\n\n\n\n\n\nImplement some theme changes\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Taxa, values_from = Tot_biomass) |&gt; \n  tidyr::drop_na() |&gt; \n  dplyr::mutate(Total = Cyanobacteria + Other,\n                Cyano_prop = (Cyanobacteria/Total) * 100) |&gt; \n  dplyr::select(Station, Month, Year, Cyano_prop) |&gt; \n  ggplot(mapping = aes(x = Month,\n                       y = Year,\n                       fill = Cyano_prop)) +\n  geom_tile(col = \"black\") +\n  facet_grid(~Station) +\n  coord_fixed() +\n  labs(x = NULL, y = NULL)+\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 90, vjust=0.5),\n        panel.grid = element_blank()) +\n  scale_fill_gradient2(\"Proportion of\\nCyanobacteria\", low = \"#E3DFFF\", high = \"#DC0073\", midpoint = 50)"
  },
  {
    "objectID": "tutorial/Part2/index.html",
    "href": "tutorial/Part2/index.html",
    "title": "TutoRial - Part 2",
    "section": "",
    "text": "The goal of this tutorial is to be familiar with the tidyverse, especially with tidyr, dplyr, and ggplot2 and to learn how to handle our datasets."
  },
  {
    "objectID": "tutorial/Part2/index.html#pipes",
    "href": "tutorial/Part2/index.html#pipes",
    "title": "TutoRial - Part 2",
    "section": "Pipes",
    "text": "Pipes\nPipes are very useful and powerful to let the data flow from one function to another. This was first implemented in the magrittr packages with pipes that looks like this: %&gt;%. This was so powerful, that in the versio 4.1.0 of R native pipes operator were launched and they look like this: |&gt;.\n\n\n\n\n\n\nTips\n\n\n\n\nThe easiest way to write the pipe is by using the keys: ⌘/Ctlr + ⇧ + M.\nIn the parameters you can choose if you want to use the native pipe operator when using these keys.\n\n\n\n\nExercises\n\nRewrite this chunks of code using the pipes\n\n\nsum(c(1,2,3,4,5))\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nc(1,2,3,4,5) |&gt; \n  sum()\n\n\n\n\n\nround(mean(seq(from = 0, to = 1.5, by = 0.2)), 2)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nseq(from = 0, to = 1.5, by = 0.2) |&gt; \n  mean() |&gt; \n  round(2)\n\n\n\n\n\nplot(sample(rnorm(10000, 20, 10), 200, replace = TRUE),y = sample(1:20, 200, replace = TRUE))\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nrnorm(10000, 20, 10) |&gt; \n  sample(200, replace = TRUE) |&gt; \n  plot(y = sample(1:20, 200, replace = TRUE))"
  },
  {
    "objectID": "tutorial/Part2/index.html#tidy-the-data-with-tidyr",
    "href": "tutorial/Part2/index.html#tidy-the-data-with-tidyr",
    "title": "TutoRial - Part 2",
    "section": "Tidy the data with tidyr",
    "text": "Tidy the data with tidyr\nAs seen during the lecture, the concept of a tidy table is that:\n\nEach variable is in its own column\nEach observation is in its own row\n\nTo reach the tidy concept, we can use 4 key functions:\n\npivot_longer - it transforms a wide dataset into a long dataset\npivot_wider - it transforms a long dataset into a wide dataset\nunite - it unifies 2 columns into 1\nseparate - it separates 1 columns into 2\n\n\nExercises\nFrom this point onwards, we will use the datasets available in the package PlanktonData. All the raw data come from SHARKweb.\n\nInstall devtools and then PlanktonData.\n\n\ninstall.packages(\"devtools\")\ndevtools::install_github(\"KMGJan/PlanktonData\")\n\n\nLoad the dataset zooplankton in your environment\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nCoordinates\nGroup\nTaxa\nBiomass\n\n\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n6.6503187\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n1.8169941\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n5.5620974\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n5.7385615\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n1.2287586\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n14.4052240\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n10.5228820\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n5.6339840\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n21.5947750\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n9.7254882\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n4.9934649\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n45.7385290\n\n\nJan\n2009\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2009\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.4705890\n\n\nJan\n2009\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n2.4673193\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n2.2483670\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n0.3071893\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n0.3856208\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nEurytemora\n0.0849674\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n13.6013010\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n2.6601280\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n7.5490209\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n8.4183010\n\n\nJan\n2010\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.1568628\n\n\nJan\n2010\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.4117650\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n5.0653670\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nAcartia\n6.0653592\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nAcartia\n9.6209217\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n2.9803908\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nCentropages\n0.7058820\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nCentropages\n1.8692823\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nEurytemora\n1.6078432\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n49.6601350\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nPseudocalanus\n3.3071872\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nPseudocalanus\n3.7777770\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n36.4313840\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nCopepoda\nTemora\n17.2418325\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nCopepoda\nTemora\n47.3595100\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.5490210\n\n\nJan\n2011\nBY31\n18.23333/58.58812\nRotatoria\nSynchaeta\n0.1960785\n\n\nJan\n2011\nBY5\n15.98333/55.25000\nRotatoria\nSynchaeta\n0.6666660\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nAcartia\n4.7200063\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nCentropages\n3.5399988\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nPseudocalanus\n15.0200000\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nCopepoda\nTemora\n10.7066649\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nRotatoria\nKeratella\n0.0100000\n\n\nJan\n2015\nBY15\n20.05000/57.33333\nRotatoria\nSynchaeta\n0.4400010\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(PlanktonData)\ndata(zooplankton)\n\n\n\n\n\nIs this dataset a tidy table?\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nstr(zooplankton)\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n✓ Each variable is in its own column ✓ Each observation is in its own row\n… But Coordinates contains 2 values (Latitude/Longitude)\n\n\n\n\nSeparate Coordinates in 2 columns: Longitude and Latitude\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nGroup\nTaxa\nBiomass\n\n\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n6.6503187\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n1.8169941\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n5.5620974\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n5.7385615\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n1.2287586\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n14.4052240\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n10.5228820\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n5.6339840\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n21.5947750\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n9.7254882\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n4.9934649\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n45.7385290\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.4705890\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.3921570\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n2.4673193\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n2.2483670\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n0.3071893\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n0.3856208\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nEurytemora\n0.0849674\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n13.6013010\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n2.6601280\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n7.5490209\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n8.4183010\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.1568628\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.4117650\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n5.0653670\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nAcartia\n6.0653592\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nAcartia\n9.6209217\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n2.9803908\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nCentropages\n0.7058820\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nCentropages\n1.8692823\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nEurytemora\n1.6078432\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n49.6601350\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nPseudocalanus\n3.3071872\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nPseudocalanus\n3.7777770\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n36.4313840\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda\nTemora\n17.2418325\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda\nTemora\n47.3595100\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria\nKeratella\n0.0196078\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.5490210\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria\nSynchaeta\n0.1960785\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria\nSynchaeta\n0.6666660\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nAcartia\n4.7200063\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nCentropages\n3.5399988\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nPseudocalanus\n15.0200000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda\nTemora\n10.7066649\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria\nKeratella\n0.0100000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria\nSynchaeta\n0.4400010\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nzooplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\")\n\n\n\n\n\nUnite Group and Taxa to create Group_Taxa\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nGroup_Taxa\nBiomass\n\n\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n6.6503187\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n1.8169941\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n5.5620974\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n5.7385615\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n1.2287586\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n14.4052240\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n10.5228820\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n5.6339840\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n21.5947750\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n9.7254882\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n4.9934649\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n45.7385290\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.3921570\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.4705890\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.3921570\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n2.4673193\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n2.2483670\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n0.3071893\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n0.3856208\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Eurytemora\n0.0849674\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n13.6013010\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n2.6601280\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n7.5490209\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n8.4183010\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.1568628\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.4117650\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n5.0653670\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Acartia\n6.0653592\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Acartia\n9.6209217\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n2.9803908\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Centropages\n0.7058820\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Centropages\n1.8692823\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Eurytemora\n1.6078432\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n49.6601350\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Pseudocalanus\n3.3071872\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Pseudocalanus\n3.7777770\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n36.4313840\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nCopepoda_Temora\n17.2418325\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nCopepoda_Temora\n47.3595100\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria_Keratella\n0.0196078\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria_Keratella\n0.0196078\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.5490210\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\nRotatoria_Synchaeta\n0.1960785\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\nRotatoria_Synchaeta\n0.6666660\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Acartia\n4.7200063\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Centropages\n3.5399988\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Pseudocalanus\n15.0200000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nCopepoda_Temora\n10.7066649\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria_Keratella\n0.0100000\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\nRotatoria_Synchaeta\n0.4400010\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nzooplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  unite(col = \"Group_Taxa\", c(Group, Taxa))\n\n\n\n\n\nMake a wide table with columns showing the Biomass values for each Group_Taxa\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nCopepoda_Acartia\nCopepoda_Centropages\nCopepoda_Pseudocalanus\nCopepoda_Temora\nRotatoria_Synchaeta\nCopepoda_Eurytemora\nRotatoria_Keratella\nCladocera_Bosmina\nCladocera_Evadne\nCladocera_Podon\n\n\n\n\nJan\n2009\nBY15\n20.05000\n57.33333\n6.6503187\n5.7385615\n10.5228820\n9.7254882\n0.3921570\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2009\nBY31\n18.23333\n58.58812\n1.8169941\n1.2287586\n5.6339840\n4.9934649\n0.4705890\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2009\nBY5\n15.98333\n55.25000\n5.5620974\n14.4052240\n21.5947750\n45.7385290\n0.3921570\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2010\nBY15\n20.05000\n57.33333\n2.4673193\n0.3071893\n13.6013010\n7.5490209\n0.1568628\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2010\nBY31\n18.23333\n58.58812\n2.2483670\n0.3856208\n2.6601280\n8.4183010\n0.4117650\n0.0849674\nNA\nNA\nNA\nNA\n\n\nJan\n2011\nBY15\n20.05000\n57.33333\n5.0653670\n2.9803908\n49.6601350\n36.4313840\n0.5490210\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2011\nBY31\n18.23333\n58.58812\n6.0653592\n0.7058820\n3.3071872\n17.2418325\n0.1960785\n1.6078432\n0.0196078\nNA\nNA\nNA\n\n\nJan\n2011\nBY5\n15.98333\n55.25000\n9.6209217\n1.8692823\n3.7777770\n47.3595100\n0.6666660\nNA\n0.0196078\nNA\nNA\nNA\n\n\nJan\n2015\nBY15\n20.05000\n57.33333\n4.7200063\n3.5399988\n15.0200000\n10.7066649\n0.4400010\nNA\n0.0100000\nNA\nNA\nNA\n\n\nJan\n2016\nBY15\n20.05000\n57.33333\n2.4866676\n6.2266595\nNA\n17.6533153\n0.9200010\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2016\nBY31\n18.23333\n58.58812\n1.4616663\n1.5533334\n2.8066655\n0.9066675\n0.2000001\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2016\nBY5\n15.98333\n55.25000\n8.6866656\n6.1800078\n1.8949995\n17.8799791\n0.8199990\nNA\n0.0500000\nNA\nNA\nNA\n\n\nJan\n2017\nBY15\n20.05000\n57.33333\n3.7200071\n2.7533319\n5.5399920\n14.0999830\n0.2799999\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2017\nBY31\n18.23333\n58.58812\n3.0466673\n0.5666663\n2.5600009\n0.8799999\n0.4400010\n0.2600000\nNA\nNA\nNA\nNA\n\n\nJan\n2017\nBY5\n15.98333\n55.25000\nNA\nNA\n2.1333311\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2018\nBY5\n15.98333\n55.25000\n16.6199952\n7.3466575\n6.5233210\n19.6533255\n0.0800001\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2019\nBY5\n15.98333\n55.25000\n23.1800075\n10.7066665\n4.9000011\n57.7600260\n0.7200000\nNA\n0.6199995\n0.0333332\n2.000001\nNA\n\n\nJan\n2019\nBY31\n18.23333\n58.58812\n6.8733320\n1.3066646\n1.9599995\n12.6533285\n0.2400000\n0.5066654\nNA\nNA\nNA\nNA\n\n\nJan\n2020\nBY15\n20.05000\n57.33333\n8.3133342\n6.7866703\n7.3066620\n14.4400057\n0.0399999\nNA\n0.0100000\nNA\nNA\nNA\n\n\nJan\n2020\nBY5\n15.98333\n55.25000\n24.2666615\n13.5400054\n2.6533343\n23.5466793\n0.1400001\nNA\nNA\nNA\nNA\nNA\n\n\nJan\n2021\nBY31\n18.23333\n58.58812\n2.3799989\n0.7699998\n0.6720001\n0.8866667\n0.0399999\n0.0333333\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2009\nBY15\n20.05000\n57.33333\n4.5620851\n6.5359550\n2.0718956\n7.7647077\n0.3137250\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2009\nBY31\n18.23333\n58.58812\n2.1045759\n2.3398701\n4.5653635\n4.8496740\n0.3529410\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2009\nBY5\n15.98333\n55.25000\n2.9084958\n19.3333680\n5.5457519\n40.3137360\n0.3137250\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2010\nBY15\n20.05000\n57.33333\n7.8562004\n2.0915040\n1.8718946\n9.8235324\n0.0392157\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2010\nBY5\n15.98333\n55.25000\n8.4052182\n6.9934715\n15.5490030\n13.4248350\n0.1960785\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2013\nBY31\n18.23333\n58.58812\n1.1552277\n1.1013079\n2.9616028\n11.4738560\n0.0882352\n0.0849674\n0.0098039\nNA\nNA\nNA\n\n\nFeb\n2013\nBY5\n15.98333\n55.25000\nNA\nNA\n4.8575163\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2014\nBY31\n18.23333\n58.58812\n0.4509799\n0.9248368\n4.8163384\n7.6928012\n0.0882352\nNA\n0.0098039\nNA\nNA\nNA\n\n\nFeb\n2014\nBY5\n15.98333\n55.25000\n7.6078378\n3.6209163\n7.9607840\n37.1111384\n0.1568628\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2015\nBY5\n15.98333\n55.25000\n5.1966737\n4.0933392\n7.2983329\n7.0599986\n0.1800000\nNA\nNA\n0.0166667\nNA\nNA\n\n\nFeb\n2015\nBY15\n20.05000\n57.33333\n1.5866677\n0.3533334\n1.9693346\n0.7000003\n0.8600010\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2015\nBY31\n18.23333\n58.58812\n1.4066646\n0.8000000\nNA\n0.3599991\n0.3600000\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2016\nBY15\n20.05000\n57.33333\n1.6966665\n3.3833390\nNA\n0.8833339\n0.2199999\nNA\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2016\nBY31\n18.23333\n58.58812\n0.9933338\n2.7733390\n0.7226666\n3.2799991\n0.1599999\n0.1733329\nNA\nNA\nNA\nNA\n\n\nFeb\n2016\nBY5\n15.98333\n55.25000\n9.0199986\n38.9333170\n1.5266680\n18.7200200\n1.3599990\nNA\n0.0199999\nNA\nNA\nNA\n\n\nFeb\n2017\nBY15\n20.05000\n57.33333\n3.8166672\n2.2700006\n11.6366740\n5.9499977\n0.0500001\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2017\nBY31\n18.23333\n58.58812\n4.9733265\n1.5399979\n2.3733321\n2.3066642\n0.2400000\nNA\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2019\nBY31\n18.23333\n58.58812\n4.9299932\n0.8466660\n1.7399985\n3.7933321\n1.0899990\n0.2866668\nNA\nNA\n0.399999\nNA\n\n\nFeb\n2019\nBY15\n20.05000\n57.33333\n29.6599990\n24.3200150\n14.4266760\n34.0533090\n0.1599999\nNA\n0.0199999\nNA\nNA\nNA\n\n\nFeb\n2019\nBY5\n15.98333\n55.25000\n7.9866830\n6.6533407\n4.3573344\n25.1732890\n0.3920010\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2020\nBY5\n15.98333\n55.25000\n17.5700062\n11.0200060\n2.9599981\n20.4599863\n0.0800001\nNA\nNA\nNA\nNA\nNA\n\n\nFeb\n2021\nBY31\n18.23333\n58.58812\n3.1666738\n1.8000002\n1.2466660\n0.9133316\nNA\nNA\n0.0100000\nNA\nNA\nNA\n\n\nFeb\n2021\nBY5\n15.98333\n55.25000\n3.2200064\n4.9919910\n6.2186631\n1.6240000\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\n2.7687899\n1.2843136\n24.2298540\n0.3251634\n0.6813720\n0.0326798\n0.1250002\nNA\nNA\nNA\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\n5.0522894\n1.2222226\n1.6307192\n0.6274512\n0.9215700\nNA\n0.0588236\nNA\nNA\nNA\n\n\nMar\n2009\nBY15\n20.05000\n57.33333\n1.9052292\n7.9084956\n4.3856250\n4.2810415\n0.0980391\nNA\nNA\nNA\nNA\nNA\n\n\nMar\n2009\nBY31\n18.23333\n58.58812\n1.9542489\n0.9869278\n1.3748356\n2.9019625\n0.7156856\nNA\n0.0049020\nNA\nNA\nNA\n\n\nMar\n2010\nBY31\n18.23333\n58.58812\n0.6200976\n0.1535947\n1.1405225\n0.6895424\n1.8676485\n0.4232027\n0.0098039\n0.0980392\nNA\nNA\n\n\nMar\n2010\nBY15\n20.05000\n57.33333\n7.5849613\n5.4836513\n6.2875840\n7.7516296\n0.4509810\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nzooplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  tidyr::unite(col = \"Group_Taxa\", c(Group, Taxa)) |&gt; \n  tidyr::pivot_wider(names_from = Group_Taxa, values_from = Biomass)"
  },
  {
    "objectID": "tutorial/Part2/index.html#manipulate-the-data-with-dplyr",
    "href": "tutorial/Part2/index.html#manipulate-the-data-with-dplyr",
    "title": "TutoRial - Part 2",
    "section": "Manipulate the data with dplyr",
    "text": "Manipulate the data with dplyr\nOnce the data are tidy, we can start using the dplyr package to process our data. The main advantage of this package is that the functions are self-explanatory by their names and simple to use.\n\nExercises\n\nLoad the dataset phytoplankton in your environment\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nCoordinates\nTaxa\nBiomass\n\n\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n1.4170670\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nDiatoms\n1.7625112\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nDiatoms\n0.1557741\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nDiatoms\n1.6393078\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n0.6395350\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n0.0588896\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n0.0915522\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nMesodinium\n0.4351159\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nMesodinium\n0.0747435\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nMesodinium\n1.4315310\n\n\nJan\n2007\nBY15\n20.05000/57.33333\nOther\n1.3033312\n\n\nJan\n2007\nBY31\n18.23333/58.58812\nOther\n0.2156630\n\n\nJan\n2007\nBY5\n15.98333/55.25000\nOther\n1.1125434\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n0.0383238\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n0.0045549\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nDiatoms\n0.2685554\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nDiatoms\n0.4660469\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n0.5857735\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n2.7702498\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nMesodinium\n2.3027740\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nMesodinium\n4.6692790\n\n\nFeb\n2007\nBY15\n20.05000/57.33333\nOther\n2.5899855\n\n\nFeb\n2007\nBY31\n18.23333/58.58812\nOther\n1.0055273\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n0.0332965\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n0.7736520\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nDiatoms\n1.8827332\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nDiatoms\n19.7081666\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nDiatoms\n0.4082621\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n0.9278628\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n3.6800348\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n3.3149470\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nMesodinium\n5.6033645\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nMesodinium\n5.0108820\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nMesodinium\n7.1609390\n\n\nMar\n2007\nBY15\n20.05000/57.33333\nOther\n3.0645188\n\n\nMar\n2007\nBY31\n18.23333/58.58812\nOther\n1.6856426\n\n\nMar\n2007\nBY5\n15.98333/55.25000\nOther\n2.9057876\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nCyanobacteria\n0.9965123\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nCyanobacteria\n1.5807710\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nCyanobacteria\n0.0410806\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nDiatoms\n0.0045963\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nDiatoms\n24.1518964\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nDinoflagellates\n156.7101643\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nDinoflagellates\n71.8011718\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nDinoflagellates\n67.6874160\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nMesodinium\n15.7203510\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nMesodinium\n12.4941918\n\n\nApr\n2007\nBY5\n15.98333/55.25000\nMesodinium\n36.8173030\n\n\nApr\n2007\nBY15\n20.05000/57.33333\nOther\n3.8423489\n\n\nApr\n2007\nBY31\n18.23333/58.58812\nOther\n8.1863325\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndata(phytoplankton)\n\n\n\n\n\nAs with the zooplankton dataset, separate Coordinates as Longitude and Latitude\n\n\n\n\n\n\n\nMonth_abb\nYear\nStation\nLongitude\nLatitude\nTaxa\nBiomass\n\n\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n1.4170670\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n1.7625112\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n0.1557741\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n1.6393078\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.6395350\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n0.0588896\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n0.0915522\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n0.4351159\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n0.0747435\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n1.4315310\n\n\nJan\n2007\nBY15\n20.05000\n57.33333\nOther\n1.3033312\n\n\nJan\n2007\nBY31\n18.23333\n58.58812\nOther\n0.2156630\n\n\nJan\n2007\nBY5\n15.98333\n55.25000\nOther\n1.1125434\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.0383238\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n0.0045549\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n0.2685554\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n0.4660469\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.5857735\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n2.7702498\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n2.3027740\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n4.6692790\n\n\nFeb\n2007\nBY15\n20.05000\n57.33333\nOther\n2.5899855\n\n\nFeb\n2007\nBY31\n18.23333\n58.58812\nOther\n1.0055273\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.0332965\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n0.7736520\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n1.8827332\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n19.7081666\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nDiatoms\n0.4082621\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.9278628\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n3.6800348\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n3.3149470\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n5.6033645\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n5.0108820\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n7.1609390\n\n\nMar\n2007\nBY15\n20.05000\n57.33333\nOther\n3.0645188\n\n\nMar\n2007\nBY31\n18.23333\n58.58812\nOther\n1.6856426\n\n\nMar\n2007\nBY5\n15.98333\n55.25000\nOther\n2.9057876\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.9965123\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nCyanobacteria\n1.5807710\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nCyanobacteria\n0.0410806\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nDiatoms\n0.0045963\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nDiatoms\n24.1518964\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nDinoflagellates\n156.7101643\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nDinoflagellates\n71.8011718\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nDinoflagellates\n67.6874160\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nMesodinium\n15.7203510\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nMesodinium\n12.4941918\n\n\nApr\n2007\nBY5\n15.98333\n55.25000\nMesodinium\n36.8173030\n\n\nApr\n2007\nBY15\n20.05000\n57.33333\nOther\n3.8423489\n\n\nApr\n2007\nBY31\n18.23333\n58.58812\nOther\n8.1863325\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") \n\n\n\n\n\nWhat is the class of the Longitude and Latitude columns?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThey are characters.\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  str()\n#&gt; tibble [2,284 × 7] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ Month_abb: chr [1:2284] \"Jan\" \"Jan\" \"Jan\" \"Jan\" ...\n#&gt;  $ Year     : chr [1:2284] \"2007\" \"2007\" \"2007\" \"2007\" ...\n#&gt;  $ Station  : chr [1:2284] \"BY15\" \"BY15\" \"BY31\" \"BY5\" ...\n#&gt;  $ Longitude: chr [1:2284] \"20.05000\" \"20.05000\" \"18.23333\" \"15.98333\" ...\n#&gt;  $ Latitude : chr [1:2284] \"57.33333\" \"57.33333\" \"58.58812\" \"55.25000\" ...\n#&gt;  $ Taxa     : chr [1:2284] \"Cyanobacteria\" \"Diatoms\" \"Diatoms\" \"Diatoms\" ...\n#&gt;  $ Biomass  : num [1:2284] 1.417 1.763 0.156 1.639 0.64 ...\n\n\n\n\n\nIf they are not numeric, modify them as numeric\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?as.numeric\n?mutate\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude))\n\n\n\n\n\nKeep only the data from year between 2008 and 2010\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nexample(\"%in%\")\n?filter\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010)\n\n\n\n\n\nKeep only the data with biomass higher or equal to 0.5 \\ \\mu g L^{-1}\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5)\n\n\n\n\n\nRename Month_abb as Month\n\n\n\n\n\n\n\nMonth\nYear\nStation\nLongitude\nLatitude\nTaxa\nBiomass\n\n\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n0.7330137\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n1.6245314\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n3.0818455\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n0.6737093\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n0.8869308\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n0.5885970\n\n\nJan\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n0.6849050\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n2.0836469\n\n\nJan\n2008\nBY15\n20.05000\n57.33333\nOther\n7.3249900\n\n\nJan\n2008\nBY31\n18.23333\n58.58812\nOther\n3.1265832\n\n\nJan\n2008\nBY5\n15.98333\n55.25000\nOther\n3.3561542\n\n\nFeb\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n1.2680965\n\n\nFeb\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n2.8023814\n\n\nFeb\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n1.1329852\n\n\nFeb\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n20.0837900\n\n\nFeb\n2008\nBY15\n20.05000\n57.33333\nOther\n16.9987771\n\n\nFeb\n2008\nBY31\n18.23333\n58.58812\nOther\n8.6802596\n\n\nFeb\n2008\nBY5\n15.98333\n55.25000\nOther\n16.0946263\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n1.6448488\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n30.4619174\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n4.6464811\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n13.6085017\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n5.7408130\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n1.1267941\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n7.3048790\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n7.6901795\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n14.4894850\n\n\nMar\n2008\nBY15\n20.05000\n57.33333\nOther\n200.9616193\n\n\nMar\n2008\nBY31\n18.23333\n58.58812\nOther\n9.3419906\n\n\nMar\n2008\nBY5\n15.98333\n55.25000\nOther\n4.0108086\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n3.2442822\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n0.5975883\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nDiatoms\n11.5565268\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n16.4387791\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nDiatoms\n1.3419904\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n67.6764830\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n24.7080846\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n9.2278796\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nMesodinium\n5.3117510\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nMesodinium\n12.5595830\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nMesodinium\n11.9859809\n\n\nApr\n2008\nBY15\n20.05000\n57.33333\nOther\n97.1777810\n\n\nApr\n2008\nBY31\n18.23333\n58.58812\nOther\n52.1543315\n\n\nApr\n2008\nBY5\n15.98333\n55.25000\nOther\n73.0003628\n\n\nMay\n2008\nBY15\n20.05000\n57.33333\nCyanobacteria\n1.9917544\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nCyanobacteria\n1.8096993\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nDiatoms\n3.7689240\n\n\nMay\n2008\nBY15\n20.05000\n57.33333\nDinoflagellates\n49.6794582\n\n\nMay\n2008\nBY31\n18.23333\n58.58812\nDinoflagellates\n15.4334030\n\n\nMay\n2008\nBY5\n15.98333\n55.25000\nDinoflagellates\n7.7954351\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5) |&gt; \n  dplyr::rename(Month = Month_abb)\n\n\n\n\n\nKeep all the column except Longitude\n\n\n\n\n\n\n\nMonth\nYear\nStation\nLatitude\nTaxa\nBiomass\n\n\n\n\nJan\n2008\nBY15\n57.33333\nCyanobacteria\n0.7330137\n\n\nJan\n2008\nBY15\n57.33333\nDiatoms\n1.6245314\n\n\nJan\n2008\nBY5\n55.25000\nDiatoms\n3.0818455\n\n\nJan\n2008\nBY15\n57.33333\nDinoflagellates\n0.6737093\n\n\nJan\n2008\nBY5\n55.25000\nDinoflagellates\n0.8869308\n\n\nJan\n2008\nBY15\n57.33333\nMesodinium\n0.5885970\n\n\nJan\n2008\nBY31\n58.58812\nMesodinium\n0.6849050\n\n\nJan\n2008\nBY5\n55.25000\nMesodinium\n2.0836469\n\n\nJan\n2008\nBY15\n57.33333\nOther\n7.3249900\n\n\nJan\n2008\nBY31\n58.58812\nOther\n3.1265832\n\n\nJan\n2008\nBY5\n55.25000\nOther\n3.3561542\n\n\nFeb\n2008\nBY15\n57.33333\nDiatoms\n1.2680965\n\n\nFeb\n2008\nBY5\n55.25000\nDiatoms\n2.8023814\n\n\nFeb\n2008\nBY15\n57.33333\nDinoflagellates\n1.1329852\n\n\nFeb\n2008\nBY5\n55.25000\nMesodinium\n20.0837900\n\n\nFeb\n2008\nBY15\n57.33333\nOther\n16.9987771\n\n\nFeb\n2008\nBY31\n58.58812\nOther\n8.6802596\n\n\nFeb\n2008\nBY5\n55.25000\nOther\n16.0946263\n\n\nMar\n2008\nBY15\n57.33333\nDiatoms\n1.6448488\n\n\nMar\n2008\nBY31\n58.58812\nDiatoms\n30.4619174\n\n\nMar\n2008\nBY5\n55.25000\nDiatoms\n4.6464811\n\n\nMar\n2008\nBY15\n57.33333\nDinoflagellates\n13.6085017\n\n\nMar\n2008\nBY31\n58.58812\nDinoflagellates\n5.7408130\n\n\nMar\n2008\nBY5\n55.25000\nDinoflagellates\n1.1267941\n\n\nMar\n2008\nBY15\n57.33333\nMesodinium\n7.3048790\n\n\nMar\n2008\nBY31\n58.58812\nMesodinium\n7.6901795\n\n\nMar\n2008\nBY5\n55.25000\nMesodinium\n14.4894850\n\n\nMar\n2008\nBY15\n57.33333\nOther\n200.9616193\n\n\nMar\n2008\nBY31\n58.58812\nOther\n9.3419906\n\n\nMar\n2008\nBY5\n55.25000\nOther\n4.0108086\n\n\nApr\n2008\nBY15\n57.33333\nCyanobacteria\n3.2442822\n\n\nApr\n2008\nBY31\n58.58812\nCyanobacteria\n0.5975883\n\n\nApr\n2008\nBY15\n57.33333\nDiatoms\n11.5565268\n\n\nApr\n2008\nBY31\n58.58812\nDiatoms\n16.4387791\n\n\nApr\n2008\nBY5\n55.25000\nDiatoms\n1.3419904\n\n\nApr\n2008\nBY15\n57.33333\nDinoflagellates\n67.6764830\n\n\nApr\n2008\nBY31\n58.58812\nDinoflagellates\n24.7080846\n\n\nApr\n2008\nBY5\n55.25000\nDinoflagellates\n9.2278796\n\n\nApr\n2008\nBY15\n57.33333\nMesodinium\n5.3117510\n\n\nApr\n2008\nBY31\n58.58812\nMesodinium\n12.5595830\n\n\nApr\n2008\nBY5\n55.25000\nMesodinium\n11.9859809\n\n\nApr\n2008\nBY15\n57.33333\nOther\n97.1777810\n\n\nApr\n2008\nBY31\n58.58812\nOther\n52.1543315\n\n\nApr\n2008\nBY5\n55.25000\nOther\n73.0003628\n\n\nMay\n2008\nBY15\n57.33333\nCyanobacteria\n1.9917544\n\n\nMay\n2008\nBY31\n58.58812\nCyanobacteria\n1.8096993\n\n\nMay\n2008\nBY31\n58.58812\nDiatoms\n3.7689240\n\n\nMay\n2008\nBY15\n57.33333\nDinoflagellates\n49.6794582\n\n\nMay\n2008\nBY31\n58.58812\nDinoflagellates\n15.4334030\n\n\nMay\n2008\nBY5\n55.25000\nDinoflagellates\n7.7954351\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5) |&gt; \n  dplyr::rename(Month = Month_abb) |&gt; \n  dplyr::select(-Longitude)\n\n\n\n\n\nMake a summary table showing the Taxa average Monthly Biomass between Station\n\n\n\n\n\n\n\nStation\nMonth\nTaxa\nAverage_Biomass\n\n\n\n\nBY15\nApr\nCyanobacteria\n2.2431900\n\n\nBY15\nApr\nDiatoms\n23.1445282\n\n\nBY15\nApr\nDinoflagellates\n83.9909404\n\n\nBY15\nApr\nMesodinium\n29.6087615\n\n\nBY15\nApr\nOther\n36.7386392\n\n\nBY15\nAug\nCyanobacteria\n30.9818961\n\n\nBY15\nAug\nDiatoms\n2.2636098\n\n\nBY15\nAug\nDinoflagellates\n9.3918903\n\n\nBY15\nAug\nMesodinium\n9.9576955\n\n\nBY15\nAug\nOther\n9.6425753\n\n\nBY15\nFeb\nDiatoms\n1.3669538\n\n\nBY15\nFeb\nDinoflagellates\n0.8888890\n\n\nBY15\nFeb\nMesodinium\n3.0700606\n\n\nBY15\nFeb\nOther\n6.6884657\n\n\nBY15\nJan\nCyanobacteria\n0.7330137\n\n\nBY15\nJan\nDiatoms\n1.3262260\n\n\nBY15\nJan\nDinoflagellates\n0.7177460\n\n\nBY15\nJan\nMesodinium\n1.3992310\n\n\nBY15\nJan\nOther\n2.9148920\n\n\nBY15\nJul\nCyanobacteria\n53.9321258\n\n\nBY15\nJul\nDiatoms\n1.9936481\n\n\nBY15\nJul\nDinoflagellates\n16.1664696\n\n\nBY15\nJul\nMesodinium\n8.0555951\n\n\nBY15\nJul\nOther\n22.4351224\n\n\nBY15\nJun\nCyanobacteria\n26.5576427\n\n\nBY15\nJun\nDiatoms\n0.6320936\n\n\nBY15\nJun\nDinoflagellates\n27.3757633\n\n\nBY15\nJun\nMesodinium\n33.1540950\n\n\nBY15\nJun\nOther\n46.1942387\n\n\nBY15\nMar\nDiatoms\n1.4455245\n\n\nBY15\nMar\nDinoflagellates\n6.2031314\n\n\nBY15\nMar\nMesodinium\n6.5886593\n\n\nBY15\nMar\nOther\n68.6788097\n\n\nBY15\nMay\nCyanobacteria\n1.4308471\n\n\nBY15\nMay\nDinoflagellates\n59.9251837\n\n\nBY15\nMay\nMesodinium\n74.1766803\n\n\nBY15\nMay\nOther\n54.9198979\n\n\nBY15\nNov\nCyanobacteria\n1.1144862\n\n\nBY15\nNov\nDiatoms\n30.4754041\n\n\nBY15\nNov\nDinoflagellates\n1.0517013\n\n\nBY15\nNov\nMesodinium\n3.8012673\n\n\nBY15\nNov\nOther\n8.4426735\n\n\nBY15\nOct\nCyanobacteria\n4.9325064\n\n\nBY15\nOct\nDiatoms\n3.4127018\n\n\nBY15\nOct\nDinoflagellates\n3.9303931\n\n\nBY15\nOct\nMesodinium\n5.5022190\n\n\nBY15\nOct\nOther\n5.4928720\n\n\nBY15\nSep\nCyanobacteria\n1.9732444\n\n\nBY15\nSep\nDiatoms\n3.6823882\n\n\nBY15\nSep\nDinoflagellates\n5.8051506\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  tidyr::separate(col = Coordinates, into = c(\"Longitude\", \"Latitude\"), sep = \"/\") |&gt; \n  dplyr::mutate(Longitude = as.numeric(Longitude),\n                Latitude = as.numeric(Latitude)) |&gt; \n  dplyr::filter(Year %in% 2008:2010,\n                Biomass &gt;= 0.5) |&gt; \n  dplyr::rename(Month = Month_abb) |&gt; \n  dplyr::select(-Longitude) |&gt; \n  dplyr::group_by(Station, Month, Taxa) |&gt; \n  dplyr::summarise(Average_Biomass = mean(Biomass)) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\n\n\nTip\n\n\n\nOnce you have made your operation using group_by and summarise, you can pipe the function ungroup()"
  },
  {
    "objectID": "tutorial/Part2/index.html#data-visualisation-with-ggplot2",
    "href": "tutorial/Part2/index.html#data-visualisation-with-ggplot2",
    "title": "TutoRial - Part 2",
    "section": "Data visualisation with ggplot2",
    "text": "Data visualisation with ggplot2\nIn this part we will build a plot step by step using the grammar of graphic in ggplot2.\n\nExercises\n\nLoad the ggplot2 library and import the zooplankton dataset\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(ggplot2)\ndata(zooplankton)\n\n\n\n\n\nCreate a dataframe named df containing only Centropages biomass\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf &lt;- zooplankton |&gt; \n  dplyr::filter(Taxa == \"Centropages\")\n\n\n\n\n\nInitiate a ggplot using the data df and the Month_abb on the x-axis and the Biomass on the y-axis\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Month_abb,\n                     y = Biomass))\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\nThe month are ordered by alphabetical order, this can be changed using the code below\n\ndf_ordered &lt;- df |&gt; \n  dplyr::mutate(Month_abb = factor(Month_abb, levels = month.abb))\n\nAnd then run again the initiation but this time with the dataframe df_ordered\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass))\n\n\n\n\n\n\n\n\n\n\n\n\nAdd the biomass data as point\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point()\n\n\n\n\n\nSeparate the plot into 3 facets corresponding to the stations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point()+\n  facet_wrap(~Station)\n\n\n\n\n\nColor the points by Year\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point(mapping = aes(color = Year))+\n  facet_wrap(~Station)\n\n\n\n\n\nRotate by 90° the x-axis text, change the color, the size and the font face of strip text and add a background color\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point(mapping = aes(color = Year)) +\n  facet_wrap(~Station) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90),\n        strip.text = element_text(color = \"firebrick\",\n                                  size = 12,\n                                  face = \"bold\"),\n        panel.background = element_rect(fill = \"forestgreen\"))\n\n\n\n\n\nChange the x-axis name to Month and add a title My plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np &lt;- ggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  geom_point(mapping = aes(color = Year)) +\n  facet_wrap(~Station) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90),\n        strip.text = element_text(color = \"firebrick\",\n                                  size = 12,\n                                  face = \"bold\"),\n        panel.background = element_rect(fill = \"forestgreen\")) +\n  labs(x = \"Month\",\n       title = \"My plot\")\np\n\n\n\n\n\nNow create a dataframe df_summarythat contain the mean and the standard error of Centropages monthly biomass by Station between 2007 and 2021\n\n\n#&gt; `summarise()` has grouped output by 'Month_abb'. You can override using the\n#&gt; `.groups` argument.\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nHave a look at the function se from the PlanktonData package\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf_summary &lt;- df |&gt;\n  group_by(Month_abb, Station) |&gt; \n  summarise(Average = mean(Biomass),\n            SE = se(Biomass)) |&gt; \n  ungroup()\n\n\n\n\n\nAdd a geom_bar showing the average monthly biomass to the plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\nWe can use another geom_* with another data using +\nSometime it is also important to add the parameter stat = \"identity\" in a geom_bar\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np +\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average),\n           stat = \"identity\")\n\n\n\n\n\nAdd a geom_errorbar showing the mean ± standard error\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np +\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average),\n           stat = \"identity\") +\n  geom_errorbar(data = df_summary,\n                mapping = aes(x = Month_abb,\n                              y = Average,\n                              ymin = Average - SE,\n                              ymax = Average + SE))\n\n\n\n\n\nChange the fill to of the bar to #EFF675 and width of the errorbar to 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np +\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average),\n           stat = \"identity\",\n           fill = \"#EFF675\") +\n  geom_errorbar(data = df_summary,\n                mapping = aes(x = Month_abb,\n                              y = Average,\n                              ymin = Average - SE,\n                              ymax = Average + SE),\n                width = 0)\n\n\n\n\n\nMake these changes from the initial plot:\n\nChange the points to a jitter plot that is in front of the bars\nChange the shape of the jitter to the shape 21\nChange the color of the bars to black and fill them as well as the jitter according to the Station\nRemove the panel background and change the color of the strip text to black\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe order matters. The first geom_* will be the first pasted on the plot.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nFirst we need to reorder the df_summary as we did with the df_ordered\n\ndf_summary &lt;- df_summary |&gt; \n  mutate(Month_abb = factor(Month_abb, levels = month.abb))\n\nAnd then we can plot\n\nggplot(data = df_ordered,\n       mapping = aes(x = Month_abb,\n                     y = Biomass)) +\n  \n  # First start with the bars\n  geom_bar(data = df_summary,\n           mapping = aes(x = Month_abb,\n                         y = Average,\n                         fill = Station),\n           stat = \"identity\",\n           alpha = 0.2, # &lt;------ this is the transparency argument\n           col = \"black\") + # &lt;------- this add the color around the bars \n  # Add the errorbar\n  geom_errorbar(data = df_summary,\n                mapping = aes(x = Month_abb,\n                              y = Average,\n                              ymin = Average - SE,\n                              ymax = Average + SE),\n                width = 0) +\n  # Replace geom_point with geom_jitter\n  geom_jitter(mapping = aes(fill = Station), # &lt;----- that is filled according to the station\n              shape = 21, # &lt;---- and from the shape 21\n              # With geom_jitter, we can chose how much jitter we want. I suggest to set only a jitter on the x-axis and not on the y-axis\n              width = .1,\n              height = 0) +\n  facet_wrap(~Station) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 90),\n        strip.text = element_text(color = \"black\",\n                                  size = 12,\n                                  face = \"bold\"),\n        panel.background = element_rect(fill = \"transparent\"),\n        legend.position = \"none\") +\n  labs(x = \"Month\",\n       title = \"My plot\") +\n  # This is optional but you can chose the fill color like this\n  scale_fill_manual(values = c(\"#01665e\",\"#d8b365\", \"#762a83\"))"
  },
  {
    "objectID": "tutorial/Part2/index.html#optional-exercises",
    "href": "tutorial/Part2/index.html#optional-exercises",
    "title": "TutoRial - Part 2",
    "section": "Optional exercises",
    "text": "Optional exercises\n\nExercise 1Exercise 2Exercise 3\n\n\n\nExerciseStep by step solution\n\n\nCreate this plot using the data zooplankton and phytoplankton:\n\n\n\n\n\n\n\n\n\n\n\n\nCombine the datasets zooplankton and phytoplankton to create a dataset named plankton\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?rbind()\n\nThis functions requires the same number and name of columns!\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndata(\"zooplankton\") ; data(\"phytoplankton\")\n\nplankton &lt;-\n  phytoplankton |&gt; \n  dplyr::mutate(Group = \"Phytoplankton\") |&gt; # &lt;---- We need to add a Group column to rbind it\n  rbind(zooplankton)\n\n\n\n\n\nFrom the dataset plankton keep only the values of for Copepoda and Phytoplankton\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\"))\n\n\n\n\n\nAdd a Season column containing the seasons (Winter = Jan, Feb, Mar; Spring = Apr, May, Jun; Summer = July, Aug, Sep; Autumn= Oct, Nov, Dec)\nWe can also specify that this is a factor that has levels\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n?case_when()\n?month.abb\n\nWe to select a value within a vector we can also use the []. For example:\n\nx &lt;- c(\"One\", \"Two\", \"Three\", \"Four\")\nx[1]\n#&gt; [1] \"One\"\nx[1:3]\n#&gt; [1] \"One\"   \"Two\"   \"Three\"\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\")) |&gt; \n  dplyr::mutate(Season = case_when(\n    Month_abb %in% month.abb[1:3] ~ \"Winter\",\n    Month_abb %in% month.abb[4:6] ~ \"Spring\",\n    Month_abb %in% month.abb[7:9] ~ \"Summer\",\n    Month_abb %in% month.abb[10:12] ~ \"Autumn\"),\n    Season = factor(Season, levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")))\n\n\n\n\n\nTake the Yearly Seasonal Biomass sum by Station for these 2 groups and transform the data by taking the log of this biomass\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\")) |&gt; \n  dplyr::mutate(Season = case_when(\n    Month_abb %in% month.abb[1:3] ~ \"Winter\",\n    Month_abb %in% month.abb[4:6] ~ \"Spring\",\n    Month_abb %in% month.abb[7:9] ~ \"Summer\",\n    Month_abb %in% month.abb[10:12] ~ \"Autumn\"),\n    Season = factor(Season, levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"))) |&gt; \n  dplyr::group_by(Season, Year, Station, Group) |&gt; \n  dplyr::summarise(Tot_Biomass_log = log(sum(Biomass))) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\nMake the data wide and save it as df (and remove all the row with NA values)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndf &lt;- \n  plankton |&gt; \n  dplyr::filter(Group %in% c(\"Phytoplankton\", \"Copepoda\")) |&gt; \n  dplyr::mutate(Season = case_when(\n    Month_abb %in% month.abb[1:3] ~ \"Winter\",\n    Month_abb %in% month.abb[4:6] ~ \"Spring\",\n    Month_abb %in% month.abb[7:9] ~ \"Summer\",\n    Month_abb %in% month.abb[10:12] ~ \"Autumn\"),\n    Season = factor(Season, levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"))) |&gt; \n  dplyr::group_by(Season, Year, Station, Group) |&gt; \n  dplyr::summarise(Tot_Biomass_log = log(sum(Biomass))) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Group, values_from = Tot_Biomass_log) |&gt; \n  tidyr::drop_na()\n\n\n\n\n\nStart to plot by using the geom_point\n\nThe shape is changing according to the Season\nThe fill is changing according to the Season\nThe size of the points are fixed to 3\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3)\n\n\n\n\n\nSpecify that the shape should be 21, 22, 23 and 24\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) \n  \n\n\n\n\n\nSplit the plot vertically based on the Season\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1)\n\n\n\n\n\nAdd the regression lines for each Station and Season without the standard error\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1) +\n  geom_smooth(mapping = aes(group = Season,\n                            col = Season),\n              se = FALSE,\n              method = \"lm\")\n\n\n\n\n\nModify the labels\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1) +\n  geom_smooth(mapping = aes(group = Season,\n                            col = Season),\n              se = FALSE,\n              method = \"lm\") +\n  labs(x = \"log(Phytoplankton Biomass)\",\n       y = \"log(Copepod Biomass)\",\n       title = \"Relationship between total phytoplankton and\\ntotal copepod biomass across stations and seasons\")\n\n\n\n\n\nModify the theme of the plot\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nggplot(data = df,\n       mapping = aes(x = Phytoplankton,\n                     y = Copepoda)) +\n  geom_point(mapping = aes(shape = Season,\n                           fill = Season),\n             size = 3) +\n  scale_shape_manual(values = c(21, 22, 23, 24)) +\n  facet_wrap(~Station, ncol = 1) +\n  geom_smooth(mapping = aes(group = Season,\n                            col = Season),\n              se = FALSE,\n              method = \"lm\") +\n  labs(x = \"log(Phytoplankton Biomass)\",\n       y = \"log(Copepod Biomass)\",\n       title = \"Relationship between total phytoplankton and\\ntotal copepod biomass across stations and seasons\") +\n  theme_bw() +\n  theme(legend.position = \"bottom\",\n        strip.background = element_blank(),\n        strip.text = element_text(hjust = 1,\n                                  face = \"bold\"),\n        panel.grid = element_blank()) +\n  scale_color_manual(values = c(\"#ADA9B7\", \"#B9E28C\", \"#FFB84C\", \"#DFD3C3\")) +\n  scale_fill_manual(values = c(\"#ADA9B7\", \"#B9E28C\", \"#FFB84C\", \"#DFD3C3\"))\n\n\n\n\n\n\n\n\n\n\nExerciseStep by step solution\n\n\nCreate this plot using the two datasets\n\n\n\n\n\n\n\n\n\n\n\n\nStart with loading the phytoplankton dataset\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndata(\"phytoplankton\")\n\n\n\n\n\nFilter the Month Aug and Sep\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\"))\n\n\n\n\n\nInitiate a plot with the Month_abb on the x-axis, the Biomass on the y-axis and that is filled according to their Taxa\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt; \n    ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa))\n\n\n\n\n\n\n\nTip\n\n\n\nYou can pipe directly your dataset into ggplot. It will know that data = what_is_above\n\n\n\n\n\n\nAdd a geom_bar\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nLook what position we can apply to geom_bar\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt; \n    ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\")\n\n\n\n\n\nSeparate the plot in facets by Station\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt; \n    ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\") +\n  facet_wrap(~Station, ncol = 1) \n\n\n\n\n\nModify the labels, fill values, theme and the y-axis and save the plot as p1\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np1 &lt;-\n  phytoplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt;\n\n  ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\") +\n  facet_wrap(~Station, ncol = 1) +\n\n  scale_fill_manual(\"Phytoplankton\", # This change the title of the legend\n                    values = c(\"#F5A65B\", \"#8BBD8B\", \"#8B9474\", \"#B388EB\", \"#28587B\"))+\n  theme_void() +\n  theme(axis.text.x = element_text(color = \"black\"),\n        strip.text = element_text(color = \"black\", hjust = .1),\n        axis.title.y = element_text(color = \"black\", angle = 90)) +\n  labs(y = \"Relative biomass\")\n\n\n\n\n\nDo the same for the zooplankton\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\np2 &lt;- \n  zooplankton |&gt; \n  dplyr::filter(Month_abb %in% c(\"Aug\", \"Sep\")) |&gt;\n\n  ggplot(mapping = aes(x = Month_abb,\n                       y = Biomass,\n                       fill = Taxa)) +\n  geom_bar(position = \"fill\",\n           stat = \"identity\") +\n  facet_wrap(~Station, ncol = 1) +\n\n\n  scale_fill_manual(\"Zooplankton\",\n                    values = c(\"#816C61\", \"#E7DFC6\", \"#E7BBE3\", \"#7CC6FE\", \"#EE6C4D\", \"#B6C9BB\", \"#9684A1\", \"#BFEDC1\", \"#B19994\", \"black\")) +\n  theme_void() +\n  theme(axis.text = element_text(color =\"black\"),\n        strip.text = element_text(color = \"transparent\"))\n\n\n\n\n\nCombine the two plots together using the package patchwork\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(patchwork)\np1 + p2 +\n  plot_layout(guides = \"collect\") # This collect the legend together\n\n\n\n\n\n\n\n\n\n\nExerciseStep by step solution\n\n\nUsing phytoplanktoncreate this plot:\n\n\n\n\n\n\n\n\n\n\n\nThis is one solution, but several other exist !\n\nRename the taxa either Cyanobacteria or Other and transform Month_abb as a factor\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb))\n  \n\n\n\n\n\nCalculate the sum of Biomass by Month, Taxa, Station and Year\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup()\n\n\n\n\n\nPivot the table and remove the NA and calculate the proportion of Cyanobacteria\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Taxa, values_from = Tot_biomass) |&gt; \n  tidyr::drop_na() |&gt; \n  dplyr::mutate(Total = Cyanobacteria + Other,\n                Cyano_prop = (Cyanobacteria/Total) * 100) |&gt; \n  dplyr::select(Station, Month, Year, Cyano_prop) # This is not needed but it is easier to have a simpler table\n\n\n\n\n\nInitiate the plot using geom_tile and separate according to the Station\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Taxa, values_from = Tot_biomass) |&gt; \n  tidyr::drop_na() |&gt; \n  dplyr::mutate(Total = Cyanobacteria + Other,\n                Cyano_prop = (Cyanobacteria/Total) * 100) |&gt; \n  dplyr::select(Station, Month, Year, Cyano_prop) |&gt;  # This is not needed but it is easier to have a simpler table\n  ggplot(mapping = aes(x = Month,\n                       y = Year,\n                       fill = Cyano_prop)) +\n  geom_tile(col = \"black\") +\n  facet_grid(~Station)\n\n\n\n\n\nImplement some theme changes\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nphytoplankton |&gt; \n  dplyr::mutate(Taxa = ifelse(Taxa == \"Cyanobacteria\", \"Cyanobacteria\", \"Other\"),\n                Month = factor(Month_abb, levels = month.abb)) |&gt; \n  dplyr::group_by(Taxa, Station, Month, Year) |&gt; \n  dplyr::summarise(Tot_biomass = sum(Biomass)) |&gt; \n  dplyr::ungroup() |&gt; \n  tidyr::pivot_wider(names_from = Taxa, values_from = Tot_biomass) |&gt; \n  tidyr::drop_na() |&gt; \n  dplyr::mutate(Total = Cyanobacteria + Other,\n                Cyano_prop = (Cyanobacteria/Total) * 100) |&gt; \n  dplyr::select(Station, Month, Year, Cyano_prop) |&gt; \n  ggplot(mapping = aes(x = Month,\n                       y = Year,\n                       fill = Cyano_prop)) +\n  geom_tile(col = \"black\") +\n  facet_grid(~Station) +\n  coord_fixed() +\n  labs(x = NULL, y = NULL)+\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 90, vjust=0.5),\n        panel.grid = element_blank()) +\n  scale_fill_gradient2(\"Proportion of\\nCyanobacteria\", low = \"#E3DFFF\", high = \"#DC0073\", midpoint = 50)"
  },
  {
    "objectID": "index.html#introduction-to-r",
    "href": "index.html#introduction-to-r",
    "title": "Marine Ecosystem Dynamics - 2023",
    "section": "",
    "text": "On this website, the slides and the tutorial are stored for the Marine Ecosystem Dynamics introduction to R.\nDuring the weekend we will have a"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "Introduction to R",
    "section": "",
    "text": "The Marine Ecosystem Dynamics introduction to R slides and the tutorial are avaiable in the MATERIAL tab."
  },
  {
    "objectID": "about.html#to-do-before-the-course",
    "href": "about.html#to-do-before-the-course",
    "title": "About",
    "section": "To do before the course",
    "text": "To do before the course"
  },
  {
    "objectID": "slides/Part1/index.html#section-1",
    "href": "slides/Part1/index.html#section-1",
    "title": "Introduction to R",
    "section": "",
    "text": "To assign a value to a variable, several options exist\n\n&lt;- e.g. a &lt;- 2\n-&gt; e.g. 2 -&gt; a\nassign() e.g. assign(\"a\", 2)\n= e.g. a = 2\n\n\nAssigning the same value for multiple variable\n\nvariable_4 &lt;- variable_5 &lt;- variable_6 &lt;- \"Value\""
  },
  {
    "objectID": "shiny/app.html",
    "href": "shiny/app.html",
    "title": "Old Faithful",
    "section": "",
    "text": "Number of bins:"
  }
]